{"cells":[{"cell_type":"markdown","metadata":{"id":"eahIQA07NLzd"},"source":["# Práctica Pipelines - Dataset titanic"]},{"cell_type":"markdown","metadata":{"id":"wmdeah-1NLze"},"source":["En el siguiente dataset intentaremos clasificar supervivientes del titanic en función de sus variables."]},{"cell_type":"markdown","metadata":{"id":"Daf_vTk8NLzi"},"source":["### Dataset \"Titanic\"\n"]},{"cell_type":"code","execution_count":217,"metadata":{"id":"v2PIxG3oNLzj","executionInfo":{"status":"ok","timestamp":1747875196147,"user_tz":180,"elapsed":41,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}}},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","execution_count":218,"metadata":{"id":"sOBO7AohNLzj","executionInfo":{"status":"ok","timestamp":1747875197345,"user_tz":180,"elapsed":140,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}}},"outputs":[],"source":["df = pd.read_csv(\"https://raw.githubusercontent.com/PabloSoligo2014/3670-UNLaM-CD/refs/heads/main/datasets/titanic.csv\")"]},{"cell_type":"code","execution_count":219,"metadata":{"id":"yH_Pw562NLzk","outputId":"df3a0e40-3b48-4957-bd55-9cb692e3186d","executionInfo":{"status":"ok","timestamp":1747875198030,"user_tz":180,"elapsed":49,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}},"colab":{"base_uri":"https://localhost:8080/","height":206}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","\n","   Parch            Ticket     Fare Cabin Embarked  \n","0      0         A/5 21171   7.2500   NaN        S  \n","1      0          PC 17599  71.2833   C85        C  \n","2      0  STON/O2. 3101282   7.9250   NaN        S  \n","3      0            113803  53.1000  C123        S  \n","4      0            373450   8.0500   NaN        S  "],"text/html":["\n","  <div id=\"df-b67f549d-cf79-415b-af42-f29e58af5aeb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b67f549d-cf79-415b-af42-f29e58af5aeb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b67f549d-cf79-415b-af42-f29e58af5aeb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b67f549d-cf79-415b-af42-f29e58af5aeb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-5c2b8ecf-f605-43ff-b637-87e305f03108\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c2b8ecf-f605-43ff-b637-87e305f03108')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-5c2b8ecf-f605-43ff-b637-87e305f03108 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 1,\n        \"max\": 891,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          710,\n          440,\n          841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 891,\n        \"samples\": [\n          \"Moubarek, Master. Halim Gonios (\\\"William George\\\")\",\n          \"Kvillner, Mr. Johan Henrik Johannesson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.526497332334044,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 681,\n        \"samples\": [\n          \"11774\",\n          \"248740\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.693428597180905,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 147,\n        \"samples\": [\n          \"D45\",\n          \"B49\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":219}],"source":["df.head()"]},{"cell_type":"code","execution_count":220,"metadata":{"id":"C7S_MPGWNLzl","outputId":"8a89e65a-996b-4190-a92a-e51e6fabc38a","executionInfo":{"status":"ok","timestamp":1747875199634,"user_tz":180,"elapsed":15,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}},"colab":{"base_uri":"https://localhost:8080/","height":460}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId     0.000000\n","Survived        0.000000\n","Pclass          0.000000\n","Name            0.000000\n","Sex             0.000000\n","Age            19.865320\n","SibSp           0.000000\n","Parch           0.000000\n","Ticket          0.000000\n","Fare            0.000000\n","Cabin          77.104377\n","Embarked        0.224467\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>PassengerId</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Survived</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Pclass</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>19.865320</td>\n","    </tr>\n","    <tr>\n","      <th>SibSp</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Parch</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Ticket</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Fare</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Cabin</th>\n","      <td>77.104377</td>\n","    </tr>\n","    <tr>\n","      <th>Embarked</th>\n","      <td>0.224467</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":220}],"source":["df.isnull().sum()/len(df)*100"]},{"cell_type":"markdown","metadata":{"id":"knlHSrUZNLzf"},"source":["## Parte 1"]},{"cell_type":"markdown","metadata":{"id":"n4PfA1G8NLzg"},"source":["Proceso el dataset; aplicando pipelines quite las columnas que considere, realice las imputaciones y/o escalamientos según corresponda y su conocimiento e intuicion le indiquen. Intente clasificar usando KNN.\n"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","\n","from sklearn.impute import SimpleImputer, KNNImputer\n","from sklearn.base import BaseEstimator, TransformerMixin\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.pipeline import Pipeline\n","from sklearn.datasets import make_classification\n","from sklearn.preprocessing import StandardScaler, OneHotEncoder\n","from sklearn.metrics import classification_report\n","from sklearn.compose import ColumnTransformer\n","from sklearn.preprocessing import OrdinalEncoder\n","from sklearn.naive_bayes import MultinomialNB"],"metadata":{"id":"zZ29DaFmNYLF","executionInfo":{"status":"ok","timestamp":1747875224735,"user_tz":180,"elapsed":15,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}}},"execution_count":223,"outputs":[]},{"cell_type":"code","execution_count":224,"metadata":{"id":"v29ZgZPFPGn0","executionInfo":{"status":"ok","timestamp":1747875226413,"user_tz":180,"elapsed":77,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}}},"outputs":[],"source":["df = pd.read_csv(\"https://raw.githubusercontent.com/PabloSoligo2014/3670-UNLaM-CD/refs/heads/main/datasets/titanic.csv\")"]},{"cell_type":"code","source":["X = df.drop([\"PassengerId\", \"Survived\", \"Cabin\", \"Name\", \"Ticket\"], axis=1)\n","\n","y = df[\"Survived\"]\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=3, test_size=0.3)"],"metadata":{"id":"BitsXQ-RNPiN","executionInfo":{"status":"ok","timestamp":1747875233934,"user_tz":180,"elapsed":4,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}}},"execution_count":226,"outputs":[]},{"cell_type":"markdown","source":["Campos filtrados"],"metadata":{"id":"oeivp8_deS-i"}},{"cell_type":"code","source":["X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"QddkZkAPctHZ","executionInfo":{"status":"ok","timestamp":1747875235380,"user_tz":180,"elapsed":53,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}},"outputId":"40b62bcf-a0a9-4b9d-aa34-71f731b3b9de"},"execution_count":227,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pclass     Sex   Age  SibSp  Parch     Fare Embarked\n","233       3  female   5.0      4      2  31.3875        S\n","229       3  female   NaN      3      1  25.4667        S\n","356       1  female  22.0      0      1  55.0000        S\n","439       2    male  31.0      0      0  10.5000        S\n","637       2    male  31.0      1      1  26.2500        S\n","..      ...     ...   ...    ...    ...      ...      ...\n","256       1  female   NaN      0      0  79.2000        C\n","643       3    male   NaN      0      0  56.4958        S\n","249       2    male  54.0      1      0  26.0000        S\n","664       3    male  20.0      1      0   7.9250        S\n","874       2  female  28.0      1      0  24.0000        C\n","\n","[623 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-c2a025ba-7dd4-4814-8cd5-cc469f4fb7a9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>233</th>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>5.0</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>31.3875</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>229</th>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>25.4667</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>356</th>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>55.0000</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>439</th>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>31.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10.5000</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>637</th>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>31.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>26.2500</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>256</th>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>79.2000</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>643</th>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>56.4958</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>249</th>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>54.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>26.0000</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>664</th>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>20.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>874</th>\n","      <td>2</td>\n","      <td>female</td>\n","      <td>28.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>24.0000</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>623 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c2a025ba-7dd4-4814-8cd5-cc469f4fb7a9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c2a025ba-7dd4-4814-8cd5-cc469f4fb7a9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c2a025ba-7dd4-4814-8cd5-cc469f4fb7a9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9d4f6cf9-3ac1-44b2-b45c-efcdb0e6258f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9d4f6cf9-3ac1-44b2-b45c-efcdb0e6258f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9d4f6cf9-3ac1-44b2-b45c-efcdb0e6258f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_9c52855a-3e68-4d35-8673-a12733800f71\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9c52855a-3e68-4d35-8673-a12733800f71 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train","summary":"{\n  \"name\": \"X_train\",\n  \"rows\": 623,\n  \"fields\": [\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"male\",\n          \"female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.893618647197226,\n        \"min\": 0.42,\n        \"max\": 74.0,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          34.5,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 52.38989760065316,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 213,\n        \"samples\": [\n          7.2292,\n          32.3208\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"Q\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":227}]},{"cell_type":"markdown","source":["### No funciona por separado (Revisar)"],"metadata":{"id":"VgEY06BOcakz"}},{"cell_type":"code","source":["ct = ColumnTransformer([(\"mean_Age\", SimpleImputer(strategy=\"mean\"), [\"Age\"]),\n","                        (\"most_freq_cat\", SimpleImputer(strategy=\"most_frequent\") , [\"Embarked\"])\n","                        ])\n","\n","ct2 = ColumnTransformer([(\"OneHot\", OneHotEncoder(sparse_output=False, dtype=int, drop='first') , [1])],\n","                         remainder='passthrough')\n","\n","ct3 = ColumnTransformer([(\"OneHot\", OneHotEncoder(sparse_output=False, dtype=int, drop='first') , [6])],\n","                         remainder='passthrough')\n","\n","pl = Pipeline(steps=[\n","    (\"ct\", ct),\n","    (\"ct2\", ct2),\n","    (\"ct3\", ct3),\n","    (\"est\", KNeighborsClassifier())\n","])"],"metadata":{"id":"pIUvFXk8QI6j","executionInfo":{"status":"ok","timestamp":1747875243683,"user_tz":180,"elapsed":5,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}}},"execution_count":230,"outputs":[]},{"cell_type":"markdown","source":["### Solucion (Es valido por el profe)"],"metadata":{"id":"uIiOeXd4eG4X"}},{"cell_type":"code","source":["ct = ColumnTransformer([\n","    (\"num\", Pipeline([\n","        (\"imp\", SimpleImputer(strategy=\"mean\")),\n","        (\"sc\", StandardScaler())\n","    ]), [0, 2, 5]),\n","    (\"cat\", Pipeline([\n","        (\"imp\", SimpleImputer(strategy=\"most_frequent\")),\n","        (\"oh\", OneHotEncoder(drop='first'))\n","    ]), [1, 6])\n","])\n","\n","pl = Pipeline(steps=[\n","    (\"ct\", ct),\n","    (\"est\", KNeighborsClassifier())\n","])"],"metadata":{"id":"b77jE53mXVGD","executionInfo":{"status":"ok","timestamp":1747875246499,"user_tz":180,"elapsed":40,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}}},"execution_count":232,"outputs":[]},{"cell_type":"code","source":["pl.fit(X_train, y_train)\n","y_pred = pl.predict(X_test)\n","print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uJzL0OM8Qs2C","executionInfo":{"status":"ok","timestamp":1747875247269,"user_tz":180,"elapsed":41,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}},"outputId":"db9f4fa4-80de-4370-8bf0-b313b986a0f5"},"execution_count":233,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.84      0.77      0.80       164\n","           1       0.68      0.76      0.72       104\n","\n","    accuracy                           0.77       268\n","   macro avg       0.76      0.77      0.76       268\n","weighted avg       0.78      0.77      0.77       268\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"IWuHdLFPNLzh"},"source":["## Parte 2"]},{"cell_type":"markdown","metadata":{"id":"MV-Z2TdcNLzh"},"source":["Reutilizando lo anterior tanto como sea posible evalue utilizando otro clasificador. Pruebe distintas alternativas de transformaciones. Evalue que opción (transformaciones+clasificador) ofrece los mejores resultados."]},{"cell_type":"code","source":["ct4 = ColumnTransformer(\n","    transformers=[\n","      (\"onehot\", OneHotEncoder(drop='first'), [1, 2]),    # columna categórica\n","      (\"scaler\", StandardScaler(), [0, 2]),               # columnas numéricas\n","    ]\n",")\n","\n","pl = Pipeline(steps=[(\"ct\", ct),\n","                     (\"ct4\", ct4),\n","                     (\"est\", KNeighborsClassifier())])"],"metadata":{"id":"AywdzWCsSmTB","executionInfo":{"status":"ok","timestamp":1747875260637,"user_tz":180,"elapsed":5,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}}},"execution_count":234,"outputs":[]},{"cell_type":"markdown","source":["## Arbol de decision"],"metadata":{"id":"Q8YCYoKvaRwI"}},{"cell_type":"code","source":["ct = ColumnTransformer([\n","    (\"num\", Pipeline([\n","        (\"imp\", SimpleImputer(strategy=\"mean\")),\n","        (\"sc\", StandardScaler())\n","    ]), [0, 2, 5]),\n","    (\"cat\", Pipeline([\n","        (\"imp\", SimpleImputer(strategy=\"most_frequent\")),\n","        (\"oh\", OneHotEncoder(drop='first'))\n","    ]), [1, 6])\n","])\n","\n","pl = Pipeline(steps=[\n","    (\"ct\", ct),\n","    (\"est\", DecisionTreeClassifier())\n","])"],"metadata":{"id":"1P-Hb5lrZ73p","executionInfo":{"status":"ok","timestamp":1747875267867,"user_tz":180,"elapsed":9,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}}},"execution_count":235,"outputs":[]},{"cell_type":"code","source":["pl.fit(X_train, y_train)\n","y_pred = pl.predict(X_test)\n","print(classification_report(y_test, y_pred))"],"metadata":{"id":"vcpAu2xCaIpo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747875269517,"user_tz":180,"elapsed":57,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}},"outputId":"d3dcd7a5-3330-4100-a502-71f92ffcb2c4"},"execution_count":236,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.80      0.78      0.79       164\n","           1       0.66      0.68      0.67       104\n","\n","    accuracy                           0.74       268\n","   macro avg       0.73      0.73      0.73       268\n","weighted avg       0.74      0.74      0.74       268\n","\n"]}]},{"cell_type":"markdown","source":["## Random Forest"],"metadata":{"id":"6vFdzLZRaTpS"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","\n","ct = ColumnTransformer([\n","    (\"num\", Pipeline([\n","        (\"imp\", SimpleImputer(strategy=\"mean\")),\n","        (\"sc\", StandardScaler())\n","    ]), [0, 2, 5]),\n","    (\"cat\", Pipeline([\n","        (\"imp\", SimpleImputer(strategy=\"most_frequent\")),\n","        (\"oh\", OneHotEncoder(drop='first'))\n","    ]), [1, 6])\n","])\n","\n","pl = Pipeline(steps=[\n","    (\"ct\", ct),\n","    (\"est\", RandomForestClassifier())\n","])"],"metadata":{"id":"y9-PbgxzaQXA","executionInfo":{"status":"ok","timestamp":1747875329239,"user_tz":180,"elapsed":4,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}}},"execution_count":242,"outputs":[]},{"cell_type":"code","source":["pl.fit(X_train, y_train)\n","y_pred = pl.predict(X_test)\n","print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MxTaTTuGbNnF","executionInfo":{"status":"ok","timestamp":1747875328085,"user_tz":180,"elapsed":34,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}},"outputId":"6e1d8185-c3b3-41b0-d73d-af0da239fa44"},"execution_count":241,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.81      0.82      0.81       164\n","           1       0.71      0.69      0.70       104\n","\n","    accuracy                           0.77       268\n","   macro avg       0.76      0.75      0.76       268\n","weighted avg       0.77      0.77      0.77       268\n","\n"]}]},{"cell_type":"markdown","source":["## Naive Bayes"],"metadata":{"id":"N6zN-pGCb0Hp"}},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB\n","\n","ct = ColumnTransformer([\n","    (\"num\", Pipeline([\n","        (\"imp\", SimpleImputer(strategy=\"mean\")),\n","        (\"sc\", StandardScaler())\n","    ]), [0, 2, 5]),\n","    (\"cat\", Pipeline([\n","        (\"imp\", SimpleImputer(strategy=\"most_frequent\")),\n","        (\"oh\", OneHotEncoder(drop='first'))\n","    ]), [1, 6])\n","])\n","\n","pl = Pipeline(steps=[\n","    (\"ct\", ct),\n","    (\"est\", GaussianNB())\n","])"],"metadata":{"id":"Hu_V8MRPaWUw","executionInfo":{"status":"ok","timestamp":1747875323617,"user_tz":180,"elapsed":14,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}}},"execution_count":239,"outputs":[]},{"cell_type":"code","source":["pl.fit(X_train, y_train)\n","y_pred = pl.predict(X_test)\n","print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rc7b_Q2NbP_S","executionInfo":{"status":"ok","timestamp":1747875325021,"user_tz":180,"elapsed":58,"user":{"displayName":"Leandro Sandoval","userId":"13944790235446664081"}},"outputId":"a3629c32-412b-46ec-9f35-d814b8e0b2ed"},"execution_count":240,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.81      0.82      0.81       164\n","           1       0.71      0.69      0.70       104\n","\n","    accuracy                           0.77       268\n","   macro avg       0.76      0.75      0.76       268\n","weighted avg       0.77      0.77      0.77       268\n","\n"]}]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.1"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":0}