{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import seaborn as sns\n","import copy\n","import matplotlib\n","import plotly.express as px\n","from PIL import Image\n","import matplotlib.pyplot as plt\n","from pylab import rcParams\n","# Reglas de Asociación\n","from mlxtend.frequent_patterns import apriori\n","from mlxtend.frequent_patterns import association_rules\n","\n","import warnings\n","warnings.filterwarnings(\"ignore\", category=DeprecationWarning)"],"metadata":{"id":"KONhYyU8qGxR","executionInfo":{"status":"ok","timestamp":1750291791962,"user_tz":180,"elapsed":19,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":45,"outputs":[]},{"cell_type":"markdown","source":["# Análisis"],"metadata":{"id":"GSF5MgXF1usx"}},{"cell_type":"code","source":["df_items = pd.read_csv(\"https://raw.githubusercontent.com/pokengineer/DataScience/main/datasets/coffee_items.csv\")\n","df_orders = pd.read_csv(\"https://raw.githubusercontent.com/pokengineer/DataScience/main/datasets/coffee_orders.csv\")"],"metadata":{"id":"WUaN_g7FpcAr","executionInfo":{"status":"ok","timestamp":1750291792607,"user_tz":180,"elapsed":647,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["df_items.head()"],"metadata":{"id":"HQlTCu8Fpoz5","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1750291792644,"user_tz":180,"elapsed":39,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"8813e259-91e3-4f47-df6d-33829a96a509"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  item_id         sku   item_name    item_cat item_size  item_price\n","0   It001  HDR-CAP-MD  Cappuccino  Hot Drinks    Medium        3.45\n","1   It002  HDR-CAP-LG  Cappuccino  Hot Drinks     Large        3.75\n","2   It003  HDR-LAT-MD       Latte  Hot Drinks    Medium        3.45\n","3   It004  HDR-LAT-LG       Latte  Hot Drinks     Large        3.75\n","4   It005     HDR-FLT  Flat White  Hot Drinks       NaN        3.15"],"text/html":["\n","  <div id=\"df-d159ad7e-a217-4ed1-a116-d255547d43b6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>item_id</th>\n","      <th>sku</th>\n","      <th>item_name</th>\n","      <th>item_cat</th>\n","      <th>item_size</th>\n","      <th>item_price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>It001</td>\n","      <td>HDR-CAP-MD</td>\n","      <td>Cappuccino</td>\n","      <td>Hot Drinks</td>\n","      <td>Medium</td>\n","      <td>3.45</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>It002</td>\n","      <td>HDR-CAP-LG</td>\n","      <td>Cappuccino</td>\n","      <td>Hot Drinks</td>\n","      <td>Large</td>\n","      <td>3.75</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>It003</td>\n","      <td>HDR-LAT-MD</td>\n","      <td>Latte</td>\n","      <td>Hot Drinks</td>\n","      <td>Medium</td>\n","      <td>3.45</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>It004</td>\n","      <td>HDR-LAT-LG</td>\n","      <td>Latte</td>\n","      <td>Hot Drinks</td>\n","      <td>Large</td>\n","      <td>3.75</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>It005</td>\n","      <td>HDR-FLT</td>\n","      <td>Flat White</td>\n","      <td>Hot Drinks</td>\n","      <td>NaN</td>\n","      <td>3.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d159ad7e-a217-4ed1-a116-d255547d43b6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d159ad7e-a217-4ed1-a116-d255547d43b6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d159ad7e-a217-4ed1-a116-d255547d43b6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4f1dc174-9978-4325-81d1-917aa935b931\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4f1dc174-9978-4325-81d1-917aa935b931')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4f1dc174-9978-4325-81d1-917aa935b931 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_items","summary":"{\n  \"name\": \"df_items\",\n  \"rows\": 24,\n  \"fields\": [\n    {\n      \"column\": \"item_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"It009\",\n          \"It017\",\n          \"It001\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sku\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"HDR-MOC-MD\",\n          \"CDR-CMO-MD\",\n          \"HDR-CAP-MD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"item_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Cold Mocha\",\n          \"Lemonade\",\n          \"Cappuccino\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"item_cat\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Hot Drinks\",\n          \"Cold Drinks\",\n          \"Snacks\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"item_size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Large\",\n          \"Medium\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"item_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7678197063434066,\n        \"min\": 2.15,\n        \"max\": 5.6,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          3.25,\n          3.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["df_orders.head()"],"metadata":{"id":"aoVa2n2ppqBh","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1750291792703,"user_tz":180,"elapsed":54,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"bca5279f-b06c-467b-cdad-ded3fc18a412"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   row_id order_id           created_at item_id  quantity cust_name in_or_out\n","0       1   ORD001  2024-02-12 07:04:19   It008         1      Alex       out\n","1       2   ORD002  2024-02-12 07:09:38   It014         1    Jordan        in\n","2       3   ORD003  2024-02-12 07:14:29   It008         1    Taylor       out\n","3       4   ORD004  2024-02-12 07:18:39   It019         1     Casey       out\n","4       5   ORD005  2024-02-12 07:23:44   It024         1     Jamie       out"],"text/html":["\n","  <div id=\"df-9ed78c89-4c6b-48de-bcd8-b505cb2a5e25\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>row_id</th>\n","      <th>order_id</th>\n","      <th>created_at</th>\n","      <th>item_id</th>\n","      <th>quantity</th>\n","      <th>cust_name</th>\n","      <th>in_or_out</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>ORD001</td>\n","      <td>2024-02-12 07:04:19</td>\n","      <td>It008</td>\n","      <td>1</td>\n","      <td>Alex</td>\n","      <td>out</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>ORD002</td>\n","      <td>2024-02-12 07:09:38</td>\n","      <td>It014</td>\n","      <td>1</td>\n","      <td>Jordan</td>\n","      <td>in</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>ORD003</td>\n","      <td>2024-02-12 07:14:29</td>\n","      <td>It008</td>\n","      <td>1</td>\n","      <td>Taylor</td>\n","      <td>out</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>ORD004</td>\n","      <td>2024-02-12 07:18:39</td>\n","      <td>It019</td>\n","      <td>1</td>\n","      <td>Casey</td>\n","      <td>out</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>ORD005</td>\n","      <td>2024-02-12 07:23:44</td>\n","      <td>It024</td>\n","      <td>1</td>\n","      <td>Jamie</td>\n","      <td>out</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ed78c89-4c6b-48de-bcd8-b505cb2a5e25')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9ed78c89-4c6b-48de-bcd8-b505cb2a5e25 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9ed78c89-4c6b-48de-bcd8-b505cb2a5e25');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-659053d2-3dcb-4c74-9cd8-0af3468e3fd5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-659053d2-3dcb-4c74-9cd8-0af3468e3fd5')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-659053d2-3dcb-4c74-9cd8-0af3468e3fd5 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_orders","summary":"{\n  \"name\": \"df_orders\",\n  \"rows\": 521,\n  \"fields\": [\n    {\n      \"column\": \"row_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150,\n        \"min\": 1,\n        \"max\": 521,\n        \"num_unique_values\": 521,\n        \"samples\": [\n          508,\n          94,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"order_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 430,\n        \"samples\": [\n          \"ORD430\",\n          \"ORD083\",\n          \"ORD185\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"created_at\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 439,\n        \"samples\": [\n          \"2024-02-15 13:00:00\",\n          \"2024-02-12 13:55:45\",\n          \"2024-02-16 14:35:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"item_id\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 29,\n        \"samples\": [\n          \"It026\",\n          \"It012\",\n          \"It003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cust_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"Noel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"in_or_out\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"out\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["print(df_orders.shape[0])"],"metadata":{"id":"M7knoecsprop","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750291792737,"user_tz":180,"elapsed":21,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"73e16983-03f4-4120-de9e-bbbeecd4dbef"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["521\n"]}]},{"cell_type":"code","source":["df_orders.order_id.duplicated().sum()"],"metadata":{"id":"sPBOiiTn0483","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750291792757,"user_tz":180,"elapsed":8,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"59b795e5-969c-4f99-c5eb-970ab620e552"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(91)"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["df_orders[df_orders['quantity']<=0]"],"metadata":{"id":"5-xRVONHqlmC","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1750291792816,"user_tz":180,"elapsed":58,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"2c8fc7d8-bcce-4029-904d-58bab059fdda"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [row_id, order_id, created_at, item_id, quantity, cust_name, in_or_out]\n","Index: []"],"text/html":["\n","  <div id=\"df-7de4e410-de84-45b6-8307-cec559c2ae49\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>row_id</th>\n","      <th>order_id</th>\n","      <th>created_at</th>\n","      <th>item_id</th>\n","      <th>quantity</th>\n","      <th>cust_name</th>\n","      <th>in_or_out</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7de4e410-de84-45b6-8307-cec559c2ae49')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7de4e410-de84-45b6-8307-cec559c2ae49 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7de4e410-de84-45b6-8307-cec559c2ae49');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["# columna de descripción"],"metadata":{"id":"8FQdqcj618AO"}},{"cell_type":"code","source":["df_items['descripcion'] =df_items.apply(lambda x: str(x['item_name']) if x['item_size']!= x['item_size'] else  str(x['item_name']) + ' | ' + str(x['item_size']) , axis=1)"],"metadata":{"id":"vmkLPmfs1_1W","executionInfo":{"status":"ok","timestamp":1750291792830,"user_tz":180,"elapsed":12,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["df_items.head(5)"],"metadata":{"id":"RvqmmRm32rrY","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1750291792878,"user_tz":180,"elapsed":38,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"5a652518-8610-4305-fde5-2fa9cdff017d"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  item_id         sku   item_name    item_cat item_size  item_price  \\\n","0   It001  HDR-CAP-MD  Cappuccino  Hot Drinks    Medium        3.45   \n","1   It002  HDR-CAP-LG  Cappuccino  Hot Drinks     Large        3.75   \n","2   It003  HDR-LAT-MD       Latte  Hot Drinks    Medium        3.45   \n","3   It004  HDR-LAT-LG       Latte  Hot Drinks     Large        3.75   \n","4   It005     HDR-FLT  Flat White  Hot Drinks       NaN        3.15   \n","\n","           descripcion  \n","0  Cappuccino | Medium  \n","1   Cappuccino | Large  \n","2       Latte | Medium  \n","3        Latte | Large  \n","4           Flat White  "],"text/html":["\n","  <div id=\"df-ca1d51bf-56dc-4db4-9f48-bdb9e022f694\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>item_id</th>\n","      <th>sku</th>\n","      <th>item_name</th>\n","      <th>item_cat</th>\n","      <th>item_size</th>\n","      <th>item_price</th>\n","      <th>descripcion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>It001</td>\n","      <td>HDR-CAP-MD</td>\n","      <td>Cappuccino</td>\n","      <td>Hot Drinks</td>\n","      <td>Medium</td>\n","      <td>3.45</td>\n","      <td>Cappuccino | Medium</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>It002</td>\n","      <td>HDR-CAP-LG</td>\n","      <td>Cappuccino</td>\n","      <td>Hot Drinks</td>\n","      <td>Large</td>\n","      <td>3.75</td>\n","      <td>Cappuccino | Large</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>It003</td>\n","      <td>HDR-LAT-MD</td>\n","      <td>Latte</td>\n","      <td>Hot Drinks</td>\n","      <td>Medium</td>\n","      <td>3.45</td>\n","      <td>Latte | Medium</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>It004</td>\n","      <td>HDR-LAT-LG</td>\n","      <td>Latte</td>\n","      <td>Hot Drinks</td>\n","      <td>Large</td>\n","      <td>3.75</td>\n","      <td>Latte | Large</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>It005</td>\n","      <td>HDR-FLT</td>\n","      <td>Flat White</td>\n","      <td>Hot Drinks</td>\n","      <td>NaN</td>\n","      <td>3.15</td>\n","      <td>Flat White</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca1d51bf-56dc-4db4-9f48-bdb9e022f694')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ca1d51bf-56dc-4db4-9f48-bdb9e022f694 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ca1d51bf-56dc-4db4-9f48-bdb9e022f694');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ea807c54-c0ed-4a84-b577-7d344dc69609\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ea807c54-c0ed-4a84-b577-7d344dc69609')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ea807c54-c0ed-4a84-b577-7d344dc69609 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_items","summary":"{\n  \"name\": \"df_items\",\n  \"rows\": 24,\n  \"fields\": [\n    {\n      \"column\": \"item_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"It009\",\n          \"It017\",\n          \"It001\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sku\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"HDR-MOC-MD\",\n          \"CDR-CMO-MD\",\n          \"HDR-CAP-MD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"item_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Cold Mocha\",\n          \"Lemonade\",\n          \"Cappuccino\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"item_cat\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Hot Drinks\",\n          \"Cold Drinks\",\n          \"Snacks\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"item_size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Large\",\n          \"Medium\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"item_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7678197063434066,\n        \"min\": 2.15,\n        \"max\": 5.6,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          3.25,\n          3.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"descripcion\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"Mocha | Medium\",\n          \"Cold Mocha | Medium\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["df_orders = pd.merge(df_orders,df_items[['item_id','descripcion']],on='item_id',how='left')"],"metadata":{"id":"wIIw0kV029_X","executionInfo":{"status":"ok","timestamp":1750291792915,"user_tz":180,"elapsed":4,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":54,"outputs":[]},{"cell_type":"markdown","source":["# reglas de asociación"],"metadata":{"id":"FDWswLq52AQR"}},{"cell_type":"code","source":["# Quitamos los ítems DOTCOM POSTAGE y POSTAGE porque no son productos.\n","# Llenamos con 0 los pedidos donde un producto no fué comprado\n","df_group = (df_orders.groupby(['order_id', 'item_name'])['quantity'].sum().unstack().reset_index().fillna(0).set_index('order_id'))\n","# Seteamos True/False dependiendo de cada valor\n","df_group = df_group.applymap(lambda x: True if x >0 else False)\n","df_group"],"metadata":{"id":"Hccw62ebqq0A","colab":{"base_uri":"https://localhost:8080/","height":490},"executionInfo":{"status":"ok","timestamp":1750292004758,"user_tz":180,"elapsed":68,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"2b66a13a-5cc2-430c-c631-4e80b0b34cd4"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-59-4154094632.py:5: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.\n","  df_group = df_group.applymap(lambda x: True if x >0 else False)\n"]},{"output_type":"execute_result","data":{"text/plain":["item_name  Cappuccino  Caramel Macchiato  Cold Coffee  Cold Mocha  Espresso  \\\n","order_id                                                                      \n","ORD001          False              False        False       False      True   \n","ORD002          False              False        False       False     False   \n","ORD003          False              False        False       False      True   \n","ORD004          False              False        False       False     False   \n","ORD005          False              False        False       False     False   \n","...               ...                ...          ...         ...       ...   \n","ORD432          False              False        False       False     False   \n","ORD433          False              False        False       False     False   \n","ORD434          False               True        False       False     False   \n","ORD435          False              False        False        True     False   \n","ORD436           True              False        False       False     False   \n","\n","item_name  Flat White  Hot Chocolate  Iced Tea  Latte  Lemonade  Mocha  \\\n","order_id                                                                 \n","ORD001          False          False     False  False     False  False   \n","ORD002          False           True     False  False     False  False   \n","ORD003          False          False     False  False     False  False   \n","ORD004          False          False      True  False     False  False   \n","ORD005          False          False     False  False     False  False   \n","...               ...            ...       ...    ...       ...    ...   \n","ORD432          False          False     False  False     False   True   \n","ORD433          False          False     False  False     False  False   \n","ORD434          False          False     False  False     False  False   \n","ORD435          False          False     False  False     False  False   \n","ORD436          False          False     False  False     False  False   \n","\n","item_name  Sandwich Ham&Cheese  Sandwich Salami&Mozzarella  White Mocha  \n","order_id                                                                 \n","ORD001                   False                       False        False  \n","ORD002                   False                       False        False  \n","ORD003                   False                       False        False  \n","ORD004                   False                       False        False  \n","ORD005                   False                        True        False  \n","...                        ...                         ...          ...  \n","ORD432                   False                       False        False  \n","ORD433                    True                       False        False  \n","ORD434                   False                       False        False  \n","ORD435                   False                       False        False  \n","ORD436                   False                       False        False  \n","\n","[389 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-750c2c2e-c0bc-4ab0-a2b8-aaa3cab1fc88\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>item_name</th>\n","      <th>Cappuccino</th>\n","      <th>Caramel Macchiato</th>\n","      <th>Cold Coffee</th>\n","      <th>Cold Mocha</th>\n","      <th>Espresso</th>\n","      <th>Flat White</th>\n","      <th>Hot Chocolate</th>\n","      <th>Iced Tea</th>\n","      <th>Latte</th>\n","      <th>Lemonade</th>\n","      <th>Mocha</th>\n","      <th>Sandwich Ham&amp;Cheese</th>\n","      <th>Sandwich Salami&amp;Mozzarella</th>\n","      <th>White Mocha</th>\n","    </tr>\n","    <tr>\n","      <th>order_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ORD001</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>ORD002</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>ORD003</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>ORD004</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>ORD005</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>ORD432</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>ORD433</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>ORD434</th>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>ORD435</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>ORD436</th>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>389 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-750c2c2e-c0bc-4ab0-a2b8-aaa3cab1fc88')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-750c2c2e-c0bc-4ab0-a2b8-aaa3cab1fc88 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-750c2c2e-c0bc-4ab0-a2b8-aaa3cab1fc88');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-63384c84-99fc-4ec7-b312-3459cad2537f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-63384c84-99fc-4ec7-b312-3459cad2537f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-63384c84-99fc-4ec7-b312-3459cad2537f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_5722b042-bc42-467f-a899-f2831d378627\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_group')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5722b042-bc42-467f-a899-f2831d378627 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_group');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_group","summary":"{\n  \"name\": \"df_group\",\n  \"rows\": 389,\n  \"fields\": [\n    {\n      \"column\": \"order_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 389,\n        \"samples\": [\n          \"ORD302\",\n          \"ORD048\",\n          \"ORD184\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cappuccino\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Caramel Macchiato\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cold Coffee\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cold Mocha\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Espresso\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Flat White\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hot Chocolate\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Iced Tea\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Latte\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lemonade\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mocha\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sandwich Ham&Cheese\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sandwich Salami&Mozzarella\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"White Mocha\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["x = 0.005\n","frequent_itemsets = apriori(df_group, min_support=x, use_colnames=True)\n","frequent_itemsets.sort_values(by=\"support\", ascending=False)"],"metadata":{"id":"y7yCo5kfrG7x","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1750292023112,"user_tz":180,"elapsed":35,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"32b3b036-3ffa-41d1-fdb8-a53969376302"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     support                                   itemsets\n","3   0.120823                               (Cold Mocha)\n","13  0.107969                              (White Mocha)\n","0   0.102828                               (Cappuccino)\n","9   0.102828                                 (Lemonade)\n","10  0.097686                                    (Mocha)\n","8   0.095116                                    (Latte)\n","1   0.095116                        (Caramel Macchiato)\n","7   0.092545                                 (Iced Tea)\n","6   0.089974                            (Hot Chocolate)\n","2   0.077121                              (Cold Coffee)\n","5   0.069409                               (Flat White)\n","4   0.048843                                 (Espresso)\n","12  0.048843               (Sandwich Salami&Mozzarella)\n","11  0.041131                      (Sandwich Ham&Cheese)\n","22  0.017995                     (Cold Mocha, Lemonade)\n","27  0.010283                  (Flat White, White Mocha)\n","15  0.007712                  (Cappuccino, Cold Coffee)\n","32  0.007712         (Sandwich Ham&Cheese, White Mocha)\n","26  0.007712                     (Iced Tea, Flat White)\n","25  0.007712     (Sandwich Salami&Mozzarella, Espresso)\n","14  0.005141            (Caramel Macchiato, Cappuccino)\n","16  0.005141            (Cold Mocha, Caramel Macchiato)\n","17  0.005141         (Caramel Macchiato, Hot Chocolate)\n","19  0.005141                    (Cold Coffee, Espresso)\n","18  0.005141              (Caramel Macchiato, Lemonade)\n","24  0.005141                  (Cold Mocha, White Mocha)\n","23  0.005141          (Cold Mocha, Sandwich Ham&Cheese)\n","21  0.005141  (Sandwich Salami&Mozzarella, Cold Coffee)\n","20  0.005141                    (Lemonade, Cold Coffee)\n","28  0.005141                  (Iced Tea, Hot Chocolate)\n","29  0.005141                  (Lemonade, Hot Chocolate)\n","30  0.005141                          (Iced Tea, Latte)\n","31  0.005141                    (Lemonade, White Mocha)"],"text/html":["\n","  <div id=\"df-22b7d17f-e566-4859-b9e3-86639425d04c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>0.120823</td>\n","      <td>(Cold Mocha)</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.107969</td>\n","      <td>(White Mocha)</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>0.102828</td>\n","      <td>(Cappuccino)</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.102828</td>\n","      <td>(Lemonade)</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.097686</td>\n","      <td>(Mocha)</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.095116</td>\n","      <td>(Latte)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.095116</td>\n","      <td>(Caramel Macchiato)</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.092545</td>\n","      <td>(Iced Tea)</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.089974</td>\n","      <td>(Hot Chocolate)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.077121</td>\n","      <td>(Cold Coffee)</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.069409</td>\n","      <td>(Flat White)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.048843</td>\n","      <td>(Espresso)</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.048843</td>\n","      <td>(Sandwich Salami&amp;Mozzarella)</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.041131</td>\n","      <td>(Sandwich Ham&amp;Cheese)</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>0.017995</td>\n","      <td>(Cold Mocha, Lemonade)</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>0.010283</td>\n","      <td>(Flat White, White Mocha)</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.007712</td>\n","      <td>(Cappuccino, Cold Coffee)</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>0.007712</td>\n","      <td>(Sandwich Ham&amp;Cheese, White Mocha)</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>0.007712</td>\n","      <td>(Iced Tea, Flat White)</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>0.007712</td>\n","      <td>(Sandwich Salami&amp;Mozzarella, Espresso)</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.005141</td>\n","      <td>(Caramel Macchiato, Cappuccino)</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.005141</td>\n","      <td>(Cold Mocha, Caramel Macchiato)</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.005141</td>\n","      <td>(Caramel Macchiato, Hot Chocolate)</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.005141</td>\n","      <td>(Cold Coffee, Espresso)</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.005141</td>\n","      <td>(Caramel Macchiato, Lemonade)</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>0.005141</td>\n","      <td>(Cold Mocha, White Mocha)</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>0.005141</td>\n","      <td>(Cold Mocha, Sandwich Ham&amp;Cheese)</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>0.005141</td>\n","      <td>(Sandwich Salami&amp;Mozzarella, Cold Coffee)</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>0.005141</td>\n","      <td>(Lemonade, Cold Coffee)</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>0.005141</td>\n","      <td>(Iced Tea, Hot Chocolate)</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>0.005141</td>\n","      <td>(Lemonade, Hot Chocolate)</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>0.005141</td>\n","      <td>(Iced Tea, Latte)</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>0.005141</td>\n","      <td>(Lemonade, White Mocha)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-22b7d17f-e566-4859-b9e3-86639425d04c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-22b7d17f-e566-4859-b9e3-86639425d04c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-22b7d17f-e566-4859-b9e3-86639425d04c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-607ff970-5ca8-41c2-bfc4-3daf169c1051\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-607ff970-5ca8-41c2-bfc4-3daf169c1051')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-607ff970-5ca8-41c2-bfc4-3daf169c1051 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"frequent_itemsets\",\n  \"rows\": 33,\n  \"fields\": [\n    {\n      \"column\": \"support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.042368327903910624,\n        \"min\": 0.005141388174807198,\n        \"max\": 0.12082262210796915,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          0.04884318766066838,\n          0.017994858611825194,\n          0.12082262210796915\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"itemsets\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"frozenset({'Iced Tea', 'Latte'})\",\n          \"frozenset({'Flat White', 'White Mocha'})\",\n          \"frozenset({'Cold Mocha', 'Sandwich Ham&Cheese'})\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["rules = association_rules(frequent_itemsets, metric=\"lift\", min_threshold=1)\n","# Ordenamos por confianza de mayor a menor\n","rules.sort_values(by=\"confidence\", ascending=False).head(5)"],"metadata":{"id":"pIhuZUtarALq","colab":{"base_uri":"https://localhost:8080/","height":258},"executionInfo":{"status":"ok","timestamp":1750292025866,"user_tz":180,"elapsed":53,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"a1eaff1e-464a-47ea-f149-5750cab7b970"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     antecedents                   consequents  \\\n","14         (Sandwich Ham&Cheese)                 (White Mocha)   \n","5                     (Lemonade)                  (Cold Mocha)   \n","8   (Sandwich Salami&Mozzarella)                    (Espresso)   \n","9                     (Espresso)  (Sandwich Salami&Mozzarella)   \n","4                   (Cold Mocha)                    (Lemonade)   \n","\n","    antecedent support  consequent support   support  confidence      lift  \\\n","14            0.041131            0.107969  0.007712    0.187500  1.736607   \n","5             0.102828            0.120823  0.017995    0.175000  1.448404   \n","8             0.048843            0.048843  0.007712    0.157895  3.232687   \n","9             0.048843            0.048843  0.007712    0.157895  3.232687   \n","4             0.120823            0.102828  0.017995    0.148936  1.448404   \n","\n","    representativity  leverage  conviction  zhangs_metric   jaccard  \\\n","14               1.0  0.003271    1.097884       0.442359  0.054545   \n","5                1.0  0.005571    1.065670       0.345068  0.087500   \n","8                1.0  0.005326    1.129499       0.726126  0.085714   \n","9                1.0  0.005326    1.129499       0.726126  0.085714   \n","4                1.0  0.005571    1.054177       0.352130  0.087500   \n","\n","    certainty  kulczynski  \n","14   0.089157    0.129464  \n","5    0.061623    0.161968  \n","8    0.114651    0.157895  \n","9    0.114651    0.157895  \n","4    0.051393    0.161968  "],"text/html":["\n","  <div id=\"df-a8700a29-011b-435e-a485-23a8964ea2d6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>representativity</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","      <th>zhangs_metric</th>\n","      <th>jaccard</th>\n","      <th>certainty</th>\n","      <th>kulczynski</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14</th>\n","      <td>(Sandwich Ham&amp;Cheese)</td>\n","      <td>(White Mocha)</td>\n","      <td>0.041131</td>\n","      <td>0.107969</td>\n","      <td>0.007712</td>\n","      <td>0.187500</td>\n","      <td>1.736607</td>\n","      <td>1.0</td>\n","      <td>0.003271</td>\n","      <td>1.097884</td>\n","      <td>0.442359</td>\n","      <td>0.054545</td>\n","      <td>0.089157</td>\n","      <td>0.129464</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>(Lemonade)</td>\n","      <td>(Cold Mocha)</td>\n","      <td>0.102828</td>\n","      <td>0.120823</td>\n","      <td>0.017995</td>\n","      <td>0.175000</td>\n","      <td>1.448404</td>\n","      <td>1.0</td>\n","      <td>0.005571</td>\n","      <td>1.065670</td>\n","      <td>0.345068</td>\n","      <td>0.087500</td>\n","      <td>0.061623</td>\n","      <td>0.161968</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>(Sandwich Salami&amp;Mozzarella)</td>\n","      <td>(Espresso)</td>\n","      <td>0.048843</td>\n","      <td>0.048843</td>\n","      <td>0.007712</td>\n","      <td>0.157895</td>\n","      <td>3.232687</td>\n","      <td>1.0</td>\n","      <td>0.005326</td>\n","      <td>1.129499</td>\n","      <td>0.726126</td>\n","      <td>0.085714</td>\n","      <td>0.114651</td>\n","      <td>0.157895</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>(Espresso)</td>\n","      <td>(Sandwich Salami&amp;Mozzarella)</td>\n","      <td>0.048843</td>\n","      <td>0.048843</td>\n","      <td>0.007712</td>\n","      <td>0.157895</td>\n","      <td>3.232687</td>\n","      <td>1.0</td>\n","      <td>0.005326</td>\n","      <td>1.129499</td>\n","      <td>0.726126</td>\n","      <td>0.085714</td>\n","      <td>0.114651</td>\n","      <td>0.157895</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(Cold Mocha)</td>\n","      <td>(Lemonade)</td>\n","      <td>0.120823</td>\n","      <td>0.102828</td>\n","      <td>0.017995</td>\n","      <td>0.148936</td>\n","      <td>1.448404</td>\n","      <td>1.0</td>\n","      <td>0.005571</td>\n","      <td>1.054177</td>\n","      <td>0.352130</td>\n","      <td>0.087500</td>\n","      <td>0.051393</td>\n","      <td>0.161968</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8700a29-011b-435e-a485-23a8964ea2d6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a8700a29-011b-435e-a485-23a8964ea2d6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a8700a29-011b-435e-a485-23a8964ea2d6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4ad4e0de-647c-48bb-8682-b9f67bcee957\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4ad4e0de-647c-48bb-8682-b9f67bcee957')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4ad4e0de-647c-48bb-8682-b9f67bcee957 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"rules\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"antecedents\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"frozenset({'Lemonade'})\",\n          \"frozenset({'Cold Mocha'})\",\n          \"frozenset({'Sandwich Salami&Mozzarella'})\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"consequents\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"frozenset({'Cold Mocha'})\",\n          \"frozenset({'Lemonade'})\",\n          \"frozenset({'Espresso'})\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"antecedent support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03659967871509389,\n        \"min\": 0.04113110539845758,\n        \"max\": 0.12082262210796915,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.10282776349614396,\n          0.12082262210796915,\n          0.04113110539845758\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"consequent support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03442235216713727,\n        \"min\": 0.04884318766066838,\n        \"max\": 0.12082262210796915,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.12082262210796915,\n          0.10282776349614396,\n          0.10796915167095116\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.005632108560464434,\n        \"min\": 0.007712082262210797,\n        \"max\": 0.017994858611825194,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.017994858611825194,\n          0.007712082262210797\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confidence\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.015526392517000453,\n        \"min\": 0.14893617021276595,\n        \"max\": 0.1875,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.17500000000000002,\n          0.14893617021276595\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lift\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9321290400396642,\n        \"min\": 1.4484042553191487,\n        \"max\": 3.2326869806094187,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.448404255319149,\n          1.4484042553191487\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"representativity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"leverage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0009814476228520708,\n        \"min\": 0.0032711917050508525,\n        \"max\": 0.005570938600722967,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0032711917050508525\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"conviction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.035052835430171694,\n        \"min\": 1.054177377892031,\n        \"max\": 1.1294987146529563,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0656695489600374\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"zhangs_metric\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.19350208120306725,\n        \"min\": 0.3450675399099468,\n        \"max\": 0.7261261261261263,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.3450675399099468\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"jaccard\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.014366195228964464,\n        \"min\": 0.05454545454545454,\n        \"max\": 0.08750000000000001,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.05454545454545454\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"certainty\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.029339550595393043,\n        \"min\": 0.05139303785892824,\n        \"max\": 0.11465149359886205,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.06162280701754388\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"kulczynski\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.013776689945038435,\n        \"min\": 0.1294642857142857,\n        \"max\": 0.161968085106383,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.1294642857142857\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":61}]},{"cell_type":"markdown","source":["# Consigna\n","- conceptualmente que representa la metrica 'support' y que representa la metrica 'confidence'\n","\n","soporte: Cantidad de transacciones que contienen el itemset (a y B) sobre el total de transacciones\n","\n","confianza: cantidad de transacciones que contienen A y B sobre las que contiene a A\n","\n","- obtener las reglas de asociacion usando item_name en lugar de la descripcion\n","- obtener las reglas de asociacion del siguiente dataset:<br>\n","http://archive.ics.uci.edu/ml/machine-learning-databases/00352/Online%20Retail.xlsx\n","\n","pueden usar pd.read_excel() para archivos xls o xlsx\n"],"metadata":{"id":"fgR2kjZQuaLl"}},{"cell_type":"code","source":["# Quitamos los ítems DOTCOM POSTAGE y POSTAGE porque no son productos.\n","# Llenamos con 0 los pedidos donde un producto no fué comprado\n","df_group = (df_orders.groupby(['order_id', 'item_name'])['quantity'].sum().unstack().reset_index().fillna(0).set_index('order_id'))\n","# Seteamos True/False dependiendo de cada valor\n","df_group = df_group.applymap(lambda x: True if x >0 else False)\n","df_group\n","\n","x = 0.005\n","frequent_itemsets = apriori(df_group, min_support=x, use_colnames=True)\n","frequent_itemsets.sort_values(by=\"support\", ascending=False)\n","\n","rules = association_rules(frequent_itemsets, metric=\"lift\", min_threshold=1)\n","# Ordenamos por confianza de mayor a menor\n","rules.sort_values(by=\"confidence\", ascending=False).head(5)"],"metadata":{"id":"URZw4B4Rus3k","colab":{"base_uri":"https://localhost:8080/","height":293},"executionInfo":{"status":"ok","timestamp":1750292201616,"user_tz":180,"elapsed":64,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"fa1300fc-7054-4040-d7a7-9a7f8462a184"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-63-250421417.py:5: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.\n","  df_group = df_group.applymap(lambda x: True if x >0 else False)\n"]},{"output_type":"execute_result","data":{"text/plain":["                     antecedents                   consequents  \\\n","14         (Sandwich Ham&Cheese)                 (White Mocha)   \n","5                     (Lemonade)                  (Cold Mocha)   \n","8   (Sandwich Salami&Mozzarella)                    (Espresso)   \n","9                     (Espresso)  (Sandwich Salami&Mozzarella)   \n","4                   (Cold Mocha)                    (Lemonade)   \n","\n","    antecedent support  consequent support   support  confidence      lift  \\\n","14            0.041131            0.107969  0.007712    0.187500  1.736607   \n","5             0.102828            0.120823  0.017995    0.175000  1.448404   \n","8             0.048843            0.048843  0.007712    0.157895  3.232687   \n","9             0.048843            0.048843  0.007712    0.157895  3.232687   \n","4             0.120823            0.102828  0.017995    0.148936  1.448404   \n","\n","    representativity  leverage  conviction  zhangs_metric   jaccard  \\\n","14               1.0  0.003271    1.097884       0.442359  0.054545   \n","5                1.0  0.005571    1.065670       0.345068  0.087500   \n","8                1.0  0.005326    1.129499       0.726126  0.085714   \n","9                1.0  0.005326    1.129499       0.726126  0.085714   \n","4                1.0  0.005571    1.054177       0.352130  0.087500   \n","\n","    certainty  kulczynski  \n","14   0.089157    0.129464  \n","5    0.061623    0.161968  \n","8    0.114651    0.157895  \n","9    0.114651    0.157895  \n","4    0.051393    0.161968  "],"text/html":["\n","  <div id=\"df-0bfba7f1-7967-4dbd-9773-1192e0a4e04a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>antecedents</th>\n","      <th>consequents</th>\n","      <th>antecedent support</th>\n","      <th>consequent support</th>\n","      <th>support</th>\n","      <th>confidence</th>\n","      <th>lift</th>\n","      <th>representativity</th>\n","      <th>leverage</th>\n","      <th>conviction</th>\n","      <th>zhangs_metric</th>\n","      <th>jaccard</th>\n","      <th>certainty</th>\n","      <th>kulczynski</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14</th>\n","      <td>(Sandwich Ham&amp;Cheese)</td>\n","      <td>(White Mocha)</td>\n","      <td>0.041131</td>\n","      <td>0.107969</td>\n","      <td>0.007712</td>\n","      <td>0.187500</td>\n","      <td>1.736607</td>\n","      <td>1.0</td>\n","      <td>0.003271</td>\n","      <td>1.097884</td>\n","      <td>0.442359</td>\n","      <td>0.054545</td>\n","      <td>0.089157</td>\n","      <td>0.129464</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>(Lemonade)</td>\n","      <td>(Cold Mocha)</td>\n","      <td>0.102828</td>\n","      <td>0.120823</td>\n","      <td>0.017995</td>\n","      <td>0.175000</td>\n","      <td>1.448404</td>\n","      <td>1.0</td>\n","      <td>0.005571</td>\n","      <td>1.065670</td>\n","      <td>0.345068</td>\n","      <td>0.087500</td>\n","      <td>0.061623</td>\n","      <td>0.161968</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>(Sandwich Salami&amp;Mozzarella)</td>\n","      <td>(Espresso)</td>\n","      <td>0.048843</td>\n","      <td>0.048843</td>\n","      <td>0.007712</td>\n","      <td>0.157895</td>\n","      <td>3.232687</td>\n","      <td>1.0</td>\n","      <td>0.005326</td>\n","      <td>1.129499</td>\n","      <td>0.726126</td>\n","      <td>0.085714</td>\n","      <td>0.114651</td>\n","      <td>0.157895</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>(Espresso)</td>\n","      <td>(Sandwich Salami&amp;Mozzarella)</td>\n","      <td>0.048843</td>\n","      <td>0.048843</td>\n","      <td>0.007712</td>\n","      <td>0.157895</td>\n","      <td>3.232687</td>\n","      <td>1.0</td>\n","      <td>0.005326</td>\n","      <td>1.129499</td>\n","      <td>0.726126</td>\n","      <td>0.085714</td>\n","      <td>0.114651</td>\n","      <td>0.157895</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(Cold Mocha)</td>\n","      <td>(Lemonade)</td>\n","      <td>0.120823</td>\n","      <td>0.102828</td>\n","      <td>0.017995</td>\n","      <td>0.148936</td>\n","      <td>1.448404</td>\n","      <td>1.0</td>\n","      <td>0.005571</td>\n","      <td>1.054177</td>\n","      <td>0.352130</td>\n","      <td>0.087500</td>\n","      <td>0.051393</td>\n","      <td>0.161968</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0bfba7f1-7967-4dbd-9773-1192e0a4e04a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0bfba7f1-7967-4dbd-9773-1192e0a4e04a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0bfba7f1-7967-4dbd-9773-1192e0a4e04a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7d2d2f5d-93b9-4f4d-94e8-a326bd1dafa5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7d2d2f5d-93b9-4f4d-94e8-a326bd1dafa5')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7d2d2f5d-93b9-4f4d-94e8-a326bd1dafa5 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"rules\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"antecedents\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"frozenset({'Lemonade'})\",\n          \"frozenset({'Cold Mocha'})\",\n          \"frozenset({'Sandwich Salami&Mozzarella'})\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"consequents\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"frozenset({'Cold Mocha'})\",\n          \"frozenset({'Lemonade'})\",\n          \"frozenset({'Espresso'})\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"antecedent support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03659967871509389,\n        \"min\": 0.04113110539845758,\n        \"max\": 0.12082262210796915,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.10282776349614396,\n          0.12082262210796915,\n          0.04113110539845758\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"consequent support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03442235216713727,\n        \"min\": 0.04884318766066838,\n        \"max\": 0.12082262210796915,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.12082262210796915,\n          0.10282776349614396,\n          0.10796915167095116\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.005632108560464434,\n        \"min\": 0.007712082262210797,\n        \"max\": 0.017994858611825194,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.017994858611825194,\n          0.007712082262210797\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confidence\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.015526392517000453,\n        \"min\": 0.14893617021276595,\n        \"max\": 0.1875,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.17500000000000002,\n          0.14893617021276595\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lift\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9321290400396642,\n        \"min\": 1.4484042553191487,\n        \"max\": 3.2326869806094187,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.448404255319149,\n          1.4484042553191487\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"representativity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"leverage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0009814476228520708,\n        \"min\": 0.0032711917050508525,\n        \"max\": 0.005570938600722967,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0032711917050508525\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"conviction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.035052835430171694,\n        \"min\": 1.054177377892031,\n        \"max\": 1.1294987146529563,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0656695489600374\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"zhangs_metric\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.19350208120306725,\n        \"min\": 0.3450675399099468,\n        \"max\": 0.7261261261261263,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.3450675399099468\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"jaccard\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.014366195228964464,\n        \"min\": 0.05454545454545454,\n        \"max\": 0.08750000000000001,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.05454545454545454\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"certainty\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.029339550595393043,\n        \"min\": 0.05139303785892824,\n        \"max\": 0.11465149359886205,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.06162280701754388\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"kulczynski\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.013776689945038435,\n        \"min\": 0.1294642857142857,\n        \"max\": 0.161968085106383,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.1294642857142857\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":[],"metadata":{"id":"b0JF3kVBixAT","executionInfo":{"status":"ok","timestamp":1750292173374,"user_tz":180,"elapsed":18,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":62,"outputs":[]}]}