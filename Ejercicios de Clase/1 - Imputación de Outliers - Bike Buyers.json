{"cells":[{"cell_type":"markdown","metadata":{"id":"WoSsEU6JHMZ_"},"source":["# Ejercicio Binning, imputacion, outliers, dummies etc\n","El siguiente Dataset contiene detalles de 1000 potenciales compradores de bicicletas, realizaremos un análisis exploratorio del mismo, imputando las variables que correspondan.\n","\n","1. ¿Cuáles de las variables contienen valores nulos?\n","2. ¿Está Balanceada la variable target 'Purchased Bike'?\n","3. Imputar los valores nulos de Gender con el valor 'X'.\n","4. Imputar los valores nulos y outliers de Age con la media.\n","5. Eliminar los registros con valor nulo en Cars.\n","6. Generar columnas dummy para las variables Education y Occupation.\n","7. Definir una estrategia de imputación para las otras variables que corresponda.\n","8. Finalizar el análisis exploratorio con gráficos del dataset."]},{"cell_type":"code","source":["#Imports\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"s_5E0Hd7WY8g","executionInfo":{"status":"ok","timestamp":1745458442701,"user_tz":180,"elapsed":6,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":133,"outputs":[]},{"cell_type":"code","execution_count":134,"metadata":{"id":"pL6BmlbmHMaD","executionInfo":{"status":"ok","timestamp":1745458442754,"user_tz":180,"elapsed":52,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"outputs":[],"source":["bike_buyers = pd.read_csv('https://raw.githubusercontent.com/pokengineer/DataScience/main/datasets/bike_buyers.csv')"]},{"cell_type":"markdown","source":["# Dataset"],"metadata":{"id":"9bIbqGTfH1Vl"}},{"cell_type":"code","execution_count":135,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"id":"orQvq2qqHMaE","executionInfo":{"status":"ok","timestamp":1745458442820,"user_tz":180,"elapsed":65,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"be985ce9-8b64-41bf-fe5c-455292b5b71f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  ID Marital Status Gender         Income    Children  \\\n","count    1000.000000            993    989     994.000000  992.000000   \n","unique           NaN              2      2            NaN         NaN   \n","top              NaN        Married   Male            NaN         NaN   \n","freq             NaN            535    500            NaN         NaN   \n","mean    19965.992000            NaN    NaN   56267.605634    1.910282   \n","std      5347.333948            NaN    NaN   31067.817462    1.626910   \n","min     11000.000000            NaN    NaN   10000.000000    0.000000   \n","25%     15290.750000            NaN    NaN   30000.000000    0.000000   \n","50%     19744.000000            NaN    NaN   60000.000000    2.000000   \n","75%     24470.750000            NaN    NaN   70000.000000    3.000000   \n","max     29447.000000            NaN    NaN  170000.000000    5.000000   \n","\n","        Education    Occupation Home Owner        Cars Commute Distance  \\\n","count        1000          1000        996  991.000000             1000   \n","unique          5             5          2         NaN                5   \n","top     Bachelors  Professional        Yes         NaN        0-1 Miles   \n","freq          306           276        682         NaN              366   \n","mean          NaN           NaN        NaN    1.455096              NaN   \n","std           NaN           NaN        NaN    1.121755              NaN   \n","min           NaN           NaN        NaN    0.000000              NaN   \n","25%           NaN           NaN        NaN    1.000000              NaN   \n","50%           NaN           NaN        NaN    1.000000              NaN   \n","75%           NaN           NaN        NaN    2.000000              NaN   \n","max           NaN           NaN        NaN    4.000000              NaN   \n","\n","               Region         Age Purchased Bike  \n","count            1000  993.000000           1000  \n","unique              3         NaN              2  \n","top     North America         NaN             No  \n","freq              508         NaN            519  \n","mean              NaN   44.139980            NaN  \n","std               NaN   12.338209            NaN  \n","min               NaN  -28.000000            NaN  \n","25%               NaN   35.000000            NaN  \n","50%               NaN   43.000000            NaN  \n","75%               NaN   52.000000            NaN  \n","max               NaN  160.000000            NaN  "],"text/html":["\n","  <div id=\"df-b3751048-4693-4ab4-9fbc-5347c2f305a8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Marital Status</th>\n","      <th>Gender</th>\n","      <th>Income</th>\n","      <th>Children</th>\n","      <th>Education</th>\n","      <th>Occupation</th>\n","      <th>Home Owner</th>\n","      <th>Cars</th>\n","      <th>Commute Distance</th>\n","      <th>Region</th>\n","      <th>Age</th>\n","      <th>Purchased Bike</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1000.000000</td>\n","      <td>993</td>\n","      <td>989</td>\n","      <td>994.000000</td>\n","      <td>992.000000</td>\n","      <td>1000</td>\n","      <td>1000</td>\n","      <td>996</td>\n","      <td>991.000000</td>\n","      <td>1000</td>\n","      <td>1000</td>\n","      <td>993.000000</td>\n","      <td>1000</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>NaN</td>\n","      <td>Married</td>\n","      <td>Male</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bachelors</td>\n","      <td>Professional</td>\n","      <td>Yes</td>\n","      <td>NaN</td>\n","      <td>0-1 Miles</td>\n","      <td>North America</td>\n","      <td>NaN</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>NaN</td>\n","      <td>535</td>\n","      <td>500</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>306</td>\n","      <td>276</td>\n","      <td>682</td>\n","      <td>NaN</td>\n","      <td>366</td>\n","      <td>508</td>\n","      <td>NaN</td>\n","      <td>519</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>19965.992000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>56267.605634</td>\n","      <td>1.910282</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.455096</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>44.139980</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>5347.333948</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>31067.817462</td>\n","      <td>1.626910</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.121755</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>12.338209</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>11000.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10000.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-28.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>15290.750000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>30000.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>19744.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>60000.000000</td>\n","      <td>2.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>43.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>24470.750000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>70000.000000</td>\n","      <td>3.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>52.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>29447.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>170000.000000</td>\n","      <td>5.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>160.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3751048-4693-4ab4-9fbc-5347c2f305a8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b3751048-4693-4ab4-9fbc-5347c2f305a8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b3751048-4693-4ab4-9fbc-5347c2f305a8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f5d50453-99a5-4d2d-b40d-f3bba0800ae5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f5d50453-99a5-4d2d-b40d-f3bba0800ae5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f5d50453-99a5-4d2d-b40d-f3bba0800ae5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"bike_buyers\",\n  \"rows\": 11,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9606.013389833963,\n        \"min\": 1000.0,\n        \"max\": 29447.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          19965.992,\n          19744.0,\n          1000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"535\",\n          \"993\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"500\",\n          \"989\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 52913.64788218525,\n        \"min\": 994.0,\n        \"max\": 170000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          56267.605633802814,\n          60000.0,\n          994.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Children\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 350.0449288202338,\n        \"min\": 0.0,\n        \"max\": 992.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          992.0,\n          1.9102822580645162,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          \"306\",\n          \"1000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          \"276\",\n          \"1000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Home Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"682\",\n          \"996\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cars\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 349.8391164975787,\n        \"min\": 0.0,\n        \"max\": 991.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          991.0,\n          1.455095862764884,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Commute Distance\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          \"366\",\n          \"1000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"508\",\n          \"1000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 339.1827761235821,\n        \"min\": -28.0,\n        \"max\": 993.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          44.13997985901309,\n          43.0,\n          993.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchased Bike\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"519\",\n          \"1000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":135}],"source":["bike_buyers.describe(include='all')"]},{"cell_type":"code","source":["bike_buyers.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":492},"id":"vL3MIz--LGo6","executionInfo":{"status":"ok","timestamp":1745458442824,"user_tz":180,"elapsed":3,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"38bc9e4b-7187-4baa-de93-f32c92c10fd4"},"execution_count":136,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID                    int64\n","Marital Status       object\n","Gender               object\n","Income              float64\n","Children            float64\n","Education            object\n","Occupation           object\n","Home Owner           object\n","Cars                float64\n","Commute Distance     object\n","Region               object\n","Age                 float64\n","Purchased Bike       object\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ID</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Marital Status</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Income</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Children</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Education</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Occupation</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Home Owner</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Cars</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Commute Distance</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Region</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Purchased Bike</th>\n","      <td>object</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":136}]},{"cell_type":"code","source":["bike_buyers.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"SrSL8UvUIyBN","executionInfo":{"status":"ok","timestamp":1745458442875,"user_tz":180,"elapsed":35,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"f26084c9-80e3-4741-e34e-7b0fc774b459"},"execution_count":137,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID Marital Status  Gender   Income  Children        Education  \\\n","0  12496        Married  Female  40000.0       1.0        Bachelors   \n","1  24107        Married    Male  30000.0       3.0  Partial College   \n","2  14177        Married    Male  80000.0       5.0  Partial College   \n","3  24381         Single     NaN  70000.0       0.0        Bachelors   \n","4  25597         Single    Male  30000.0       0.0        Bachelors   \n","\n","       Occupation Home Owner  Cars Commute Distance   Region   Age  \\\n","0  Skilled Manual        Yes   0.0        0-1 Miles   Europe  42.0   \n","1        Clerical        Yes   1.0        0-1 Miles   Europe  43.0   \n","2    Professional         No   2.0        2-5 Miles   Europe  60.0   \n","3    Professional        Yes   1.0       5-10 Miles  Pacific  41.0   \n","4        Clerical         No   0.0        0-1 Miles   Europe  36.0   \n","\n","  Purchased Bike  \n","0             No  \n","1             No  \n","2             No  \n","3            Yes  \n","4            Yes  "],"text/html":["\n","  <div id=\"df-64bb6576-83f5-40ae-8b9c-6c2bb6c9aa47\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Marital Status</th>\n","      <th>Gender</th>\n","      <th>Income</th>\n","      <th>Children</th>\n","      <th>Education</th>\n","      <th>Occupation</th>\n","      <th>Home Owner</th>\n","      <th>Cars</th>\n","      <th>Commute Distance</th>\n","      <th>Region</th>\n","      <th>Age</th>\n","      <th>Purchased Bike</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>12496</td>\n","      <td>Married</td>\n","      <td>Female</td>\n","      <td>40000.0</td>\n","      <td>1.0</td>\n","      <td>Bachelors</td>\n","      <td>Skilled Manual</td>\n","      <td>Yes</td>\n","      <td>0.0</td>\n","      <td>0-1 Miles</td>\n","      <td>Europe</td>\n","      <td>42.0</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>24107</td>\n","      <td>Married</td>\n","      <td>Male</td>\n","      <td>30000.0</td>\n","      <td>3.0</td>\n","      <td>Partial College</td>\n","      <td>Clerical</td>\n","      <td>Yes</td>\n","      <td>1.0</td>\n","      <td>0-1 Miles</td>\n","      <td>Europe</td>\n","      <td>43.0</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>14177</td>\n","      <td>Married</td>\n","      <td>Male</td>\n","      <td>80000.0</td>\n","      <td>5.0</td>\n","      <td>Partial College</td>\n","      <td>Professional</td>\n","      <td>No</td>\n","      <td>2.0</td>\n","      <td>2-5 Miles</td>\n","      <td>Europe</td>\n","      <td>60.0</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>24381</td>\n","      <td>Single</td>\n","      <td>NaN</td>\n","      <td>70000.0</td>\n","      <td>0.0</td>\n","      <td>Bachelors</td>\n","      <td>Professional</td>\n","      <td>Yes</td>\n","      <td>1.0</td>\n","      <td>5-10 Miles</td>\n","      <td>Pacific</td>\n","      <td>41.0</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>25597</td>\n","      <td>Single</td>\n","      <td>Male</td>\n","      <td>30000.0</td>\n","      <td>0.0</td>\n","      <td>Bachelors</td>\n","      <td>Clerical</td>\n","      <td>No</td>\n","      <td>0.0</td>\n","      <td>0-1 Miles</td>\n","      <td>Europe</td>\n","      <td>36.0</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64bb6576-83f5-40ae-8b9c-6c2bb6c9aa47')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-64bb6576-83f5-40ae-8b9c-6c2bb6c9aa47 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-64bb6576-83f5-40ae-8b9c-6c2bb6c9aa47');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b8ef1ed1-4ec5-4488-8db1-835a2e00f361\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b8ef1ed1-4ec5-4488-8db1-835a2e00f361')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b8ef1ed1-4ec5-4488-8db1-835a2e00f361 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"bike_buyers","summary":"{\n  \"name\": \"bike_buyers\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5347,\n        \"min\": 11000,\n        \"max\": 29447,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          18976,\n          18504,\n          17657\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Single\",\n          \"Married\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31067.817462360166,\n        \"min\": 10000.0,\n        \"max\": 170000.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          40000.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Children\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.6269101545030549,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Partial College\",\n          \"Graduate Degree\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Clerical\",\n          \"Management\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Home Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cars\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1217553730932948,\n        \"min\": 0.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Commute Distance\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2-5 Miles\",\n          \"10+ Miles\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Europe\",\n          \"Pacific\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.33820870107193,\n        \"min\": -28.0,\n        \"max\": 160.0,\n        \"num_unique_values\": 57,\n        \"samples\": [\n          42.0,\n          50.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchased Bike\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":137}]},{"cell_type":"markdown","source":["# Resolucion Punto 1\n","¿Cuáles de las variables contienen valores nulos?"],"metadata":{"id":"y-43zbQ1H6g-"}},{"cell_type":"code","source":["# Calcular porcentaje de valores nulos por columna\n","null_percentages = bike_buyers.isna().sum() / bike_buyers.shape[0] * 100\n","\n","# Filtrar solo columnas con porcentaje mayor a 0\n","columns_with_nulls = null_percentages[null_percentages > 0]\n","\n","# Mostrar el resultado\n","print(\"Columnas con valores nulos (%):\")\n","print(columns_with_nulls)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zmOc1IdSH6m-","executionInfo":{"status":"ok","timestamp":1745458442898,"user_tz":180,"elapsed":21,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"f62e2284-b733-4a62-b7d8-a33833d5fb59"},"execution_count":138,"outputs":[{"output_type":"stream","name":"stdout","text":["Columnas con valores nulos (%):\n","Marital Status    0.7\n","Gender            1.1\n","Income            0.6\n","Children          0.8\n","Home Owner        0.4\n","Cars              0.9\n","Age               0.7\n","dtype: float64\n"]}]},{"cell_type":"markdown","source":["# Resolucion Punto 2\n","¿Está Balanceada la variable target 'Purchased Bike'?"],"metadata":{"id":"RB0v_FmfMYL6"}},{"cell_type":"code","source":["cateries = bike_buyers[\"Purchased Bike\"].value_counts()\n","plt.bar(cateries.index, cateries.values, color=['red', 'green'])\n","plt.xlabel('Categoría')\n","plt.ylabel('Cantidad')\n","plt.title('Frecuencia de Categorías')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":473},"id":"kLf47XYVMqox","executionInfo":{"status":"ok","timestamp":1745458443008,"user_tz":180,"elapsed":108,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"d1c2171e-7eb9-4d56-ff05-c8a18c1b6738"},"execution_count":139,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["bike_buyers[\"Purchased Bike\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"JKxcwPD6OEUf","executionInfo":{"status":"ok","timestamp":1745458443009,"user_tz":180,"elapsed":6,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"e4a69e1f-88ab-486e-c666-73c4ed3b404e"},"execution_count":140,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Purchased Bike\n","No     519\n","Yes    481\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Purchased Bike</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>No</th>\n","      <td>519</td>\n","    </tr>\n","    <tr>\n","      <th>Yes</th>\n","      <td>481</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":140}]},{"cell_type":"markdown","source":["# Resolución Punto 3\n","Imputar los valores nulos de Gender con el valor 'X'"],"metadata":{"id":"LOAra8ALOgKY"}},{"cell_type":"code","source":["bike_buyers[\"Gender\"] = bike_buyers[\"Gender\"].fillna(\"X\")"],"metadata":{"id":"tFc1t0gwOuhD","executionInfo":{"status":"ok","timestamp":1745458443010,"user_tz":180,"elapsed":4,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":141,"outputs":[]},{"cell_type":"code","source":["# Calcular porcentaje de valores nulos por columna\n","null_percentages = bike_buyers.isna().sum() / bike_buyers.shape[0] * 100\n","\n","# Filtrar solo la columna 'Gender'\n","gender_null_percentage = null_percentages['Gender']\n","\n","# Mostrar el resultado\n","print(\"Porcentaje de valores nulos en 'Gender':\")\n","print(gender_null_percentage)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zJsLBUMKPV0Y","executionInfo":{"status":"ok","timestamp":1745458443051,"user_tz":180,"elapsed":29,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"46522a75-312f-4092-d265-cd9723b352b7"},"execution_count":142,"outputs":[{"output_type":"stream","name":"stdout","text":["Porcentaje de valores nulos en 'Gender':\n","0.0\n"]}]},{"cell_type":"markdown","source":["# Resolución Punto 4\n","Imputar los valores nulos y outliers de Age con la media."],"metadata":{"id":"qbiDnMG7Ou1r"}},{"cell_type":"markdown","source":["## Imputacion de Valores Nulos"],"metadata":{"id":"dz-gnDPJVm_q"}},{"cell_type":"code","source":["# 1. Calcular la media (ignorando nulos)\n","mean_age = bike_buyers['Age'].mean()\n","\n","# 2. Imputar los valores nulos con la media\n","bike_buyers['Age'] = bike_buyers['Age'].fillna(mean_age)"],"metadata":{"id":"x5DfkHTFOzrC","executionInfo":{"status":"ok","timestamp":1745458443052,"user_tz":180,"elapsed":7,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":143,"outputs":[]},{"cell_type":"code","source":["# Calcular porcentaje de valores nulos por columna\n","null_percentages = bike_buyers.isna().sum() / bike_buyers.shape[0] * 100\n","\n","# Filtrar solo la columna 'Gender'\n","gender_null_percentage = null_percentages['Age']\n","\n","# Mostrar el resultado\n","print(\"Porcentaje de valores nulos en 'Age':\")\n","print(gender_null_percentage)"],"metadata":{"id":"02-0WESwQo59","executionInfo":{"status":"ok","timestamp":1745458443053,"user_tz":180,"elapsed":6,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"dda829fe-04dd-46f7-f146-a9ebbb35c91a","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":144,"outputs":[{"output_type":"stream","name":"stdout","text":["Porcentaje de valores nulos en 'Age':\n","0.0\n"]}]},{"cell_type":"markdown","source":["## Imputacion de valores outliers"],"metadata":{"id":"I9_Iuo6QVrKQ"}},{"cell_type":"markdown","source":["### Antes de la imputacion"],"metadata":{"id":"d0vCPzCVW5I4"}},{"cell_type":"code","source":["# Semilla para reproducibilidad del jitter\n","np.random.seed(42)\n","\n","# Crear el gráfico\n","plt.figure(figsize=(10, 4))\n","sns.boxplot(x=bike_buyers[\"Age\"], width=0.4, showfliers=True, orient=\"x\")\n","sns.stripplot(x=bike_buyers[\"Age\"], color='red', size=5, alpha=0.6, jitter=True)\n","\n","# Personalizar\n","plt.title(\"Boxplot con Puntos - Edad de Compradores Potenciales de Bicicletas\")\n","plt.xlabel(\"Edad\")\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":410},"id":"4Mcgme2DVaXC","executionInfo":{"status":"ok","timestamp":1745458443203,"user_tz":180,"elapsed":153,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"49290c6c-8e9f-49eb-9932-bdb515fba06e"},"execution_count":145,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Imputacion mediante la formula"],"metadata":{"id":"jxz9VzoyXl8P"}},{"cell_type":"code","source":["import numpy as np\n","# 3. Calcular límites para detectar outliers\n","Q1 = bike_buyers['Age'].quantile(0.25)\n","Q3 = bike_buyers['Age'].quantile(0.75)\n","IQR = Q3 - Q1\n","lower_bound = Q1 - 1.5 * IQR\n","upper_bound = Q3 + 1.5 * IQR\n","\n","# 4. Reemplazar los outliers con la media\n","bike_buyers['Age'] = np.where(\n","    (bike_buyers['Age'] < lower_bound) | (bike_buyers['Age'] > upper_bound),\n","    mean_age,\n","    bike_buyers['Age']\n",")"],"metadata":{"id":"4HYTSN7_S0DC","executionInfo":{"status":"ok","timestamp":1745458443222,"user_tz":180,"elapsed":31,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":146,"outputs":[]},{"cell_type":"markdown","source":["### Luego de la imputacion"],"metadata":{"id":"-G6X8aEHXpk-"}},{"cell_type":"code","source":["# Semilla para reproducibilidad del jitter\n","np.random.seed(42)\n","\n","# Crear el gráfico\n","plt.figure(figsize=(10, 4))\n","sns.boxplot(x=bike_buyers[\"Age\"], width=0.4, showfliers=True, orient=\"x\")\n","sns.stripplot(x=bike_buyers[\"Age\"], color='red', size=5, alpha=0.6, jitter=True)\n","\n","# Personalizar\n","plt.title(\"Boxplot con Puntos - Edad de Compradores Potenciales de Bicicletas\")\n","plt.xlabel(\"Edad\")\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":410},"id":"XbQFfzJUTLnS","executionInfo":{"status":"ok","timestamp":1745458443378,"user_tz":180,"elapsed":159,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"0560a6f7-d178-433e-a264-76d3009300a6"},"execution_count":147,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x400 with 1 Axes>"],"image/png":"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BZvNhvLycpx99tn49NNP085LRPK6EA6H8ctf/hITJ06EzWZDVVUVfvKTnyTcY1VVVdi2bRvefffd2LMev2b09PTghhtuiK33kyZNwp133plgHW9qaoIkSfjtb3+LBx98MLa/k046CR999FHKPEXra7p8hTVr1uC8885DZWUlbDYbJk6ciF/+8pexd4kWiqLg7rvvxowZM2C32zFq1CisWrUq5T77+OOP8aUvfQmlpaXIy8tDdXU1VqxYIfz7Q7m39JzPoTJ69GgASHhXZ8r5WLt2LRYtWhRbk0866aSEZzNdzoeiKLjnnnswa9Ys2O12lJWV4dxzz8XHH3+sOS/RsTY1NaGsrAwAcNttt8XuPzVfbsuWLbjyyitRU1MDu92O0aNHY8WKFejs7EzYz+F+jogjC/J8fMHxeDzo6OgAYwxtbW2499570d/fn2BlYYzhwgsvxNtvv42VK1dizpw5ePXVV/HDH/4QLS0t+P3vf4+8vDw89thjmD9/Pn7605/id7/7HQDgv//7v+HxePDoo48mWGQikQjOPfdczJs3D7/5zW/wyiuv4JZbbkE4HMYvfvGLjPPdtm0bTj/9dBQUFOBHP/oRLBYLHnjgASxevBjvvvsuTjnlFCxcuBDXX389/vCHP+AnP/kJpk2bBgCxn+nYsmULTj/9dFgsFlxzzTWoqqrCnj178MILL8SEND37juc73/kOioqKcMstt6CpqQl33303rrvuOqxevXroFwrAnj17AAAlJSWGxv/617+GLMu48cYb4fF48Jvf/AZf//rX8cEHHwAAfvrTn8Lj8WD//v34/e9/DwBwuVwAuHK5ePFifP7557juuutQXV2Np59+GldeeSV6enrw3e9+FwDw+uuv47LLLsOZZ54Zs6zv2LEDGzZsiH3ncBEKhdDR0ZGy3el0xqzjr732Gr761a9i+vTpuOOOO9DZ2YmrrroKY8eOTRl3zz334MILL8TXv/51BINBPPXUU7jkkkvw4osv4rzzzot97+qrr8YTTzyByy+/HKeddhreeuuthN9r4fP5cOaZZ2Lv3r24/vrrUVlZiccffxxvvfVWynffeustLF26FHPnzsUtt9wCWZZjQvd7772Hk08+OeN+nn/+eQA8DEMPjz76KK666iqcdNJJuOOOO3Do0CHcc8892LBhAzZt2gS32x37biQSwdKlS7Fw4UL85je/wd/+9jdcd911cDqd+OlPf4qvf/3r+MpXvoI///nP+OY3v4lTTz0V1dXVCfu77rrr4Ha7ceutt2LXrl24//770dzcHBPuVXbt2oXLLrsMq1atwre+9S1MnToVAA9JnDFjBi688EKYzWa88MILuPbaa6EoCv77v/87Nv7nP/85fvWrX2HZsmVYtmwZPv30U5xzzjkIBoMJ8zl06BBOO+00eL1eXH/99SgpKcFjjz2GCy+8EM888wy+/OUvJ3z/l7/8JaxWK2688UYEAgFYrVbd1+u//uu/8Mwzz+C6667D9OnT0dnZifXr12PHjh044YQTdF2veJLXhauvvhqPPfYYli9fjh/84Af44IMPcMcdd2DHjh0xxfvuu+/Gd77zHbhcrpgCMGrUKAA8JGbRokVoaWnBqlWrMH78ePz73//GzTffjAMHDqTkhD355JPo6+vDqlWrIEkSfvOb3+ArX/kKGhoaYhZ1PetrOh599FG4XC58//vfh8vlwltvvYWf//zn6O3txV133aV5XlatWhW7r6+//no0Njbij3/8IzZt2oQNGzbAYrGgra0N55xzDsrKynDTTTfB7XajqakJ//rXv4TnXe+9NdTzmY5IJBJb60KhEHbs2IFbbrkFkyZNwvz58zXHPvroo1ixYgVmzJiBm2++GW63G5s2bcIrr7yCyy+/POO4lStX4tFHH8XSpUtx9dVXIxwO47333sPGjRsToiWGeqxlZWW4//778e1vfxtf/vKX8ZWvfAUAcNxxxwHg75CGhgZcddVVGD16NLZt24YHH3wQ27Ztw8aNG2Prw+F+jogjDEZ8IXnkkUcYgJR/NpuNPfroownffe655xgA9qtf/Sph+/Lly5kkSezzzz+Pbbv55puZLMts3bp17Omnn2YA2N13350w7oorrmAA2He+853YNkVR2HnnncesVitrb2+PbQfAbrnlltjniy++mFmtVrZnz57YttbWVpafn88WLlwY26bu++2339Z1PhYuXMjy8/NZc3NzwnZFUYa8b/XcnnXWWQnjv/e97zGTycR6eno053LLLbcwAGzXrl2svb2dNTY2sgceeIDZbDY2atQoNjAwwBhjbMKECeyKK65IGb9o0SK2aNGi2Oe3336bAWDTpk1jgUAgtv2ee+5hANhnn30W23beeeexCRMmpPzNu+++mwFgTzzxRGxbMBhk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NWtwww03xKwrarz8m2++ifz8fBx33HH4+c9/jp/97GdYvnx5glXTbrfjlVdewRVXXIFTTjkFa9euxUsvvYSf/OQnGeNF1X28/vrrWLBgAa699lqYzWY88MADCAQC+M1vfhP73pw5c2AymXDnnXfC4/HAZrPF+gKk4w9/+AMWLFiAE044Addccw2qq6vR1NSEl156CXV1dUPad664+uqr8cwzz+Dcc8/FpZdeij179uCJJ57IKjdk7ty5WL16Nb7//e/jpJNOgsvlwgUXXIBrrrkGDzzwAK688kp88sknqKqqwjPPPIMNGzbg7rvvjnnErr76anR1deGMM87A2LFj0dzcjHvvvRdz5szRLHVshJaWFjzxxBMp210uFy6++GIAwB133IHzzjsPCxYswIoVK9DV1YV7770XM2bMSBASzzvvPPzud7/Dueeei8svvxxtbW3405/+hEmTJmHLli2x782ZMweXXXYZ7rvvPng8Hpx22ml48803E/qlaPGtb30Lf/zjH/HNb34Tn3zyCSoqKvD444+nFBGQZRl//etfsXTpUsyYMQNXXXUVxowZg5aWFrz99tsoKCjACy+8kHE/FosF//rXv3DWWWdh4cKFuPTSSzF//nxYLBZs27YNTz75JIqKinD77bfDYrHgzjvvxFVXXYVFixbhsssui5Xaraqqymg8yIZgMIgzzzwTl156KXbt2oX77rsPCxYswIUXXigce84558S8a6tWrUJ/fz/+8pe/oLy8HAcOHIh9r6ysDDfeeCPuuOMOnH/++Vi2bBk2bdqEtWvXpoQz3nTTTfj73/+OpUuX4vrrr0dxcTEee+wxNDY24p///KewgaDe69XX14exY8di+fLlmD17NlwuF9544w189NFHGeP2h8Ls2bNxxRVX4MEHH4yFLX344Yd47LHHcPHFFyd4m+bOnYv7778fv/rVrzBp0iSUl5fjjDPOwA9/+EM8//zzOP/883HllVdi7ty5GBgYwGeffYZnnnkGTU1NmuGg6dCzviZz2mmnoaioCFdccQWuv/56SJKExx9/XFc416JFi7Bq1SrccccdqKurwznnnAOLxYL6+no8/fTTuOeee7B8+XI89thjuO+++/DlL38ZEydORF9fH/7yl7+goKBA0ws3lHvrcJxPj8cTW+vC4XCsPHVeXh5uuummjOMKCgrw+9//HldffTVO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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Resolucion Punto 5\n","Eliminar los registros con valor nulo en Cars."],"metadata":{"id":"mpxhtx0DSspN"}},{"cell_type":"code","source":["# Eliminar filas donde la columna 'Cars' tenga valores nulos\n","bike_buyers = bike_buyers.dropna(subset=['Cars'])"],"metadata":{"id":"7VMhdBAmQgGW","executionInfo":{"status":"ok","timestamp":1745458443381,"user_tz":180,"elapsed":8,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":148,"outputs":[]},{"cell_type":"code","source":["# Calcular porcentaje de valores nulos por columna\n","null_percentages = bike_buyers.isna().sum() / bike_buyers.shape[0] * 100\n","\n","# Filtrar solo la columna 'Gender'\n","gender_null_percentage = null_percentages['Cars']\n","\n","# Mostrar el resultado\n","print(\"Porcentaje de valores nulos en 'Cars':\")\n","print(gender_null_percentage)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5L75aqM-XVC3","executionInfo":{"status":"ok","timestamp":1745458443393,"user_tz":180,"elapsed":13,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"cf53cc74-7985-4eb5-fc4a-2a404db5e6e5"},"execution_count":149,"outputs":[{"output_type":"stream","name":"stdout","text":["Porcentaje de valores nulos en 'Cars':\n","0.0\n"]}]},{"cell_type":"markdown","source":["# Resolucion Punto 6\n","Generar columnas dummy para las variables Education y Occupation."],"metadata":{"id":"U_ws487fXaym"}},{"cell_type":"code","source":["# Calcular porcentaje de valores nulos por columna\n","null_percentages = bike_buyers.isna().sum() / bike_buyers.shape[0] * 100\n","\n","# Filtrar solo columnas con porcentaje mayor a 0\n","columns_with_nulls = null_percentages[null_percentages > 0]\n","\n","# Mostrar el resultado\n","print(\"Columnas con valores nulos (%):\")\n","print(columns_with_nulls)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8zgZ1yOdYR9W","executionInfo":{"status":"ok","timestamp":1745458443401,"user_tz":180,"elapsed":7,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"4f1b8254-edeb-47ac-8105-521e31ec3160"},"execution_count":150,"outputs":[{"output_type":"stream","name":"stdout","text":["Columnas con valores nulos (%):\n","Marital Status    0.706357\n","Income            0.605449\n","Children          0.807265\n","Home Owner        0.403633\n","dtype: float64\n"]}]},{"cell_type":"code","source":["# Crear dummies para las columnas 'Education' y 'Occupation'\n","bike_buyers = pd.get_dummies(bike_buyers, columns=['Education', 'Occupation'], drop_first=True)"],"metadata":{"id":"wIT5iLsfX4Yv","executionInfo":{"status":"ok","timestamp":1745458443403,"user_tz":180,"elapsed":1,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":151,"outputs":[]},{"cell_type":"code","source":["bike_buyers.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"v7wi6R3PYHnO","executionInfo":{"status":"ok","timestamp":1745458443449,"user_tz":180,"elapsed":29,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"eaa0e07b-fa1a-43fb-fc89-8471c7c4bd83"},"execution_count":152,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID Marital Status  Gender   Income  Children Home Owner  Cars  \\\n","0  12496        Married  Female  40000.0       1.0        Yes   0.0   \n","1  24107        Married    Male  30000.0       3.0        Yes   1.0   \n","2  14177        Married    Male  80000.0       5.0         No   2.0   \n","3  24381         Single       X  70000.0       0.0        Yes   1.0   \n","4  25597         Single    Male  30000.0       0.0         No   0.0   \n","\n","  Commute Distance   Region   Age Purchased Bike  Education_Graduate Degree  \\\n","0        0-1 Miles   Europe  42.0             No                      False   \n","1        0-1 Miles   Europe  43.0             No                      False   \n","2        2-5 Miles   Europe  60.0             No                      False   \n","3       5-10 Miles  Pacific  41.0            Yes                      False   \n","4        0-1 Miles   Europe  36.0            Yes                      False   \n","\n","   Education_High School  Education_Partial College  \\\n","0                  False                      False   \n","1                  False                       True   \n","2                  False                       True   \n","3                  False                      False   \n","4                  False                      False   \n","\n","   Education_Partial High School  Occupation_Management  Occupation_Manual  \\\n","0                          False                  False              False   \n","1                          False                  False              False   \n","2                          False                  False              False   \n","3                          False                  False              False   \n","4                          False                  False              False   \n","\n","   Occupation_Professional  Occupation_Skilled Manual  \n","0                    False                       True  \n","1                    False                      False  \n","2                     True                      False  \n","3                     True                      False  \n","4                    False                      False  "],"text/html":["\n","  <div id=\"df-95ef156e-2877-41bd-b9a0-c4c29559ca53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Marital Status</th>\n","      <th>Gender</th>\n","      <th>Income</th>\n","      <th>Children</th>\n","      <th>Home Owner</th>\n","      <th>Cars</th>\n","      <th>Commute Distance</th>\n","      <th>Region</th>\n","      <th>Age</th>\n","      <th>Purchased Bike</th>\n","      <th>Education_Graduate Degree</th>\n","      <th>Education_High School</th>\n","      <th>Education_Partial College</th>\n","      <th>Education_Partial High School</th>\n","      <th>Occupation_Management</th>\n","      <th>Occupation_Manual</th>\n","      <th>Occupation_Professional</th>\n","      <th>Occupation_Skilled Manual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>12496</td>\n","      <td>Married</td>\n","      <td>Female</td>\n","      <td>40000.0</td>\n","      <td>1.0</td>\n","      <td>Yes</td>\n","      <td>0.0</td>\n","      <td>0-1 Miles</td>\n","      <td>Europe</td>\n","      <td>42.0</td>\n","      <td>No</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>24107</td>\n","      <td>Married</td>\n","      <td>Male</td>\n","      <td>30000.0</td>\n","      <td>3.0</td>\n","      <td>Yes</td>\n","      <td>1.0</td>\n","      <td>0-1 Miles</td>\n","      <td>Europe</td>\n","      <td>43.0</td>\n","      <td>No</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>14177</td>\n","      <td>Married</td>\n","      <td>Male</td>\n","      <td>80000.0</td>\n","      <td>5.0</td>\n","      <td>No</td>\n","      <td>2.0</td>\n","      <td>2-5 Miles</td>\n","      <td>Europe</td>\n","      <td>60.0</td>\n","      <td>No</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>24381</td>\n","      <td>Single</td>\n","      <td>X</td>\n","      <td>70000.0</td>\n","      <td>0.0</td>\n","      <td>Yes</td>\n","      <td>1.0</td>\n","      <td>5-10 Miles</td>\n","      <td>Pacific</td>\n","      <td>41.0</td>\n","      <td>Yes</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>25597</td>\n","      <td>Single</td>\n","      <td>Male</td>\n","      <td>30000.0</td>\n","      <td>0.0</td>\n","      <td>No</td>\n","      <td>0.0</td>\n","      <td>0-1 Miles</td>\n","      <td>Europe</td>\n","      <td>36.0</td>\n","      <td>Yes</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-95ef156e-2877-41bd-b9a0-c4c29559ca53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-95ef156e-2877-41bd-b9a0-c4c29559ca53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-95ef156e-2877-41bd-b9a0-c4c29559ca53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3ccd8b43-7dbc-4956-9756-4073a4153697\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3ccd8b43-7dbc-4956-9756-4073a4153697')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3ccd8b43-7dbc-4956-9756-4073a4153697 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"bike_buyers","summary":"{\n  \"name\": \"bike_buyers\",\n  \"rows\": 991,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5328,\n        \"min\": 11000,\n        \"max\": 29447,\n        \"num_unique_values\": 991,\n        \"samples\": [\n          25026,\n          25241,\n          25074\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Single\",\n          \"Married\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30915.51147596431,\n        \"min\": 10000.0,\n        \"max\": 170000.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          40000.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Children\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.6256006849150635,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Home Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cars\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1217553730932948,\n        \"min\": 0.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Commute Distance\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2-5 Miles\",\n          \"10+ Miles\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Europe\",\n          \"Pacific\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.056577157774816,\n        \"min\": 25.0,\n        \"max\": 74.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          57.0,\n          27.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchased Bike\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education_Graduate Degree\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education_High School\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education_Partial College\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education_Partial High School\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation_Management\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation_Manual\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation_Professional\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation_Skilled Manual\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":152}]},{"cell_type":"markdown","source":["# Resolucion Punto 7\n","Definir una estrategia de imputación para las otras variables que corresponda."],"metadata":{"id":"fsJxR7dKZaL-"}},{"cell_type":"code","source":["# Calcular porcentaje de valores nulos por columna\n","null_percentages = bike_buyers.isna().sum() / bike_buyers.shape[0] * 100\n","\n","# Filtrar solo columnas con porcentaje mayor a 0\n","columns_with_nulls = null_percentages[null_percentages > 0]\n","\n","# Mostrar el resultado\n","print(\"Columnas con valores nulos (%):\")\n","print(columns_with_nulls)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LUbIwHKyZiGl","executionInfo":{"status":"ok","timestamp":1745458443456,"user_tz":180,"elapsed":5,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"fd7d0156-afbb-4398-c5a7-2f8250ec8b05"},"execution_count":153,"outputs":[{"output_type":"stream","name":"stdout","text":["Columnas con valores nulos (%):\n","Marital Status    0.706357\n","Income            0.605449\n","Children          0.807265\n","Home Owner        0.403633\n","dtype: float64\n"]}]},{"cell_type":"markdown","source":["## Imputacion Marital Status\n","Se reemplaza los nulos por el valor moda"],"metadata":{"id":"M2da21QQZ3qt"}},{"cell_type":"code","source":["most_common_marital = bike_buyers['Marital Status'].mode()[0]\n","bike_buyers['Marital Status'] = bike_buyers['Marital Status'].fillna(most_common_marital)"],"metadata":{"id":"HPQ-l0TgZ6h8","executionInfo":{"status":"ok","timestamp":1745458650520,"user_tz":180,"elapsed":42,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":154,"outputs":[]},{"cell_type":"markdown","source":["## Imputacion Income\n","Se reemplaza los nulos por el valor de la mediana"],"metadata":{"id":"iqf48gT9Z6PU"}},{"cell_type":"code","source":["median_income = bike_buyers['Income'].median()\n","bike_buyers['Income'] = bike_buyers['Income'].fillna(median_income)"],"metadata":{"id":"MP9C6jc_apMk","executionInfo":{"status":"ok","timestamp":1745458706056,"user_tz":180,"elapsed":2,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":155,"outputs":[]},{"cell_type":"markdown","source":["## Imputacion Children\n","Se reemplaza los nulos por el valor de la mediana"],"metadata":{"id":"diovwT57apVN"}},{"cell_type":"code","source":["median_children = bike_buyers['Children'].median()\n","bike_buyers['Children'] = bike_buyers['Children'].fillna(median_children)"],"metadata":{"id":"5n3GqbnharQ7","executionInfo":{"status":"ok","timestamp":1745458733117,"user_tz":180,"elapsed":43,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":156,"outputs":[]},{"cell_type":"markdown","source":["## Imputacion Home Owner\n","Se reemplaza los nulos por el valor moda"],"metadata":{"id":"1945_mRNarmz"}},{"cell_type":"code","source":["most_common_owner = bike_buyers['Home Owner'].mode()[0]\n","bike_buyers['Home Owner'] = bike_buyers['Home Owner'].fillna(most_common_owner)"],"metadata":{"id":"LBYzHBJSaufb","executionInfo":{"status":"ok","timestamp":1745458754898,"user_tz":180,"elapsed":2,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}}},"execution_count":157,"outputs":[]},{"cell_type":"code","source":["# Calcular porcentaje de valores nulos por columna\n","null_percentages = bike_buyers.isna().sum() / bike_buyers.shape[0] * 100\n","\n","# Filtrar solo columnas con porcentaje mayor a 0\n","columns_with_nulls = null_percentages[null_percentages > 0]\n","\n","# Mostrar el resultado\n","print(\"Columnas con valores nulos (%):\")\n","print(columns_with_nulls)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"85b8CmiJcwo5","executionInfo":{"status":"ok","timestamp":1745458766905,"user_tz":180,"elapsed":5,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"81175e89-9ef7-42d8-c2ab-cf254cd30978"},"execution_count":158,"outputs":[{"output_type":"stream","name":"stdout","text":["Columnas con valores nulos (%):\n","Series([], dtype: float64)\n"]}]},{"cell_type":"markdown","source":["# Resolucion Punto 8\n","Finalizar el análisis exploratorio con gráficos del dataset."],"metadata":{"id":"OOGPhWCYczG6"}},{"cell_type":"markdown","source":[],"metadata":{"id":"UzImIScJc4yK"}},{"cell_type":"code","source":["sns.boxplot(x=bike_buyers['Income'])\n","plt.title('Boxplot de Income')\n","plt.show()"],"metadata":{"id":"Tj2NNJgBdK4q","executionInfo":{"status":"ok","timestamp":1745458870049,"user_tz":180,"elapsed":118,"user":{"displayName":"Luis Di Nicco","userId":"09330020554994464081"}},"outputId":"477ec74c-9a40-42e2-e511-0eeb6354bbb4","colab":{"base_uri":"https://localhost:8080/","height":472}},"execution_count":159,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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jC6Dgrryyiu1dOlSbdu2TZL0ySefaPny5eratWupWWOekrSWM5lLYcnOzpbP51P58uVLxRoDgYAGDBigUaNGKTU11dkfyusLBAJ69913VbduXXXu3FmVK1dWy5Ytg56GCPXb1aIQ8oEQCAQ0YsQItW7dWg0bNpQk7du3T36/3/uHmychIUH79u3zxvz8Ss7bn7fvdGNycnJ05MgRffvtt8rNzc13TN55FNTs2bO1fv16TZo0ydkX6uvbsWOHnnvuOdWpU0eLFi3S73//ew0fPlwvvfRS0PxOd9x9+/apcuXKQfsjIiJ00UUXFcplcK7X3x//+EfddNNNql+/viIjI9W0aVONGDFCt9xyS6lZY56StJYzmUthOHr0qEaPHq2bb77Z++KeUF/jn//8Z0VERGj48OH57g/l9R04cECHDx/W5MmT1aVLFy1evFi/+c1vdOONN+qDDz7wjhvKt6tFocDf5lhS3HXXXdq8ebOWL19e3FMpNHv27NHdd9+tjIwMRUdHF/d0Cl0gENAVV1yh//7v/5YkNW3aVJs3b9b06dOVlpZWzLMrHG+88YZee+01vf7660pNTVVmZqZGjBihxMTEUrPGC9WJEyfUt29fmZmee+654p5OoVi3bp2mTp2q9evXy+fzFfd0Cl0gEJAk9ezZUyNHjpQkNWnSRB9//LGmT5+utm3bFuf0SqyQfgRh2LBheuedd7Rs2bKgr56uUqWKjh8/roMHDwaN379/v6pUqeKN+eWrU/NO/9qYuLg4xcTEqFKlSgoPD893TN55FMS6det04MABXX755YqIiFBERIQ++OAD/c///I8iIiKUkJAQ0uurWrWqGjRoELTt0ksv9V5NnHfepztulSpVdODAgaD9J0+e1HfffVcol8G5rE+SRo0a5T2K0KhRIw0YMEAjR470HhEqDWvMU5LWciZzORd5cbBr1y5lZGQEfe1vKK/xo48+0oEDB5ScnOzd5uzatUv33nuvatSoEfLrq1SpkiIiIn71dieUb1eLQkgGgplp2LBheuutt/Tee++pZs2aQfubNWumyMhILV261Nu2detW7d69W61atZIktWrVSps2bQr6C5/3Dz7vL1GrVq2CziNvTN55+P1+NWvWLGhMIBDQ0qVLvTEF0b59e23atEmZmZnenyuuuEK33HKL9/+hvL7WrVs7b0vdtm2bUlJSJEk1a9ZUlSpVgo6bk5Oj1atXB63v4MGDWrdunTfmvffeUyAQUMuWLb0xH374oU6cOBG0vnr16qlChQpndBkU1I8//qiwsOB/XuHh4d5vMqVhjXlK0lrOZC4FlRcHWVlZWrJkiSpWrBi0P5TXOGDAAG3cuDHoNicxMVGjRo3SokWLQn59fr9fzZs3P+3tTqjfbxSJ4n6VZEH8/ve/t/j4eHv//fft66+/9v78+OOP3pihQ4dacnKyvffee7Z27Vpr1aqVtWrVytuf93aVTp06WWZmpi1cuNAuvvjifN+uMmrUKPv000/t2WefzfftKlFRUTZz5kzbsmWLDR482MqXLx/0KtfC8PN3MYT6+tasWWMRERE2ceJEy8rKstdee83KlCljr776qjdm8uTJVr58eZs3b55t3LjRevbsme/b5po2bWqrV6+25cuXW506dYLecnXw4EFLSEiwAQMG2ObNm2327NlWpkwZ5y1XERER9sQTT9inn35q48aNK5S3OaalpVm1atW8tznOmTPHKlWqZPfff39IrvHQoUO2YcMG27Bhg0myJ5980jZs2OC9gr8kreVM5nK2azx+/Lhdf/31Vr16dcvMzAy63fn5K/ZL8hp/7Tr8pV++iyHU1zdnzhyLjIy0559/3rKysry3H3700UfeeYTy7WpRCMlAkJTvnxdffNEbc+TIEbvzzjutQoUKVqZMGfvNb35jX3/9ddD5fPHFF9a1a1eLiYmxSpUq2b333msnTpwIGrNs2TJr0qSJ+f1+u+SSS4KOkeeZZ56x5ORk8/v91qJFC1u1alWhr/mXgRDq63v77betYcOGFhUVZfXr17fnn38+aH8gELCHHnrIEhISLCoqytq3b29bt24NGvOf//zHbr75ZouNjbW4uDi79dZb7dChQ0FjPvnkE2vTpo1FRUVZtWrVbPLkyc5c3njjDatbt675/X5LTU21d99995zXl5OTY3fffbclJydbdHS0XXLJJTZ27NigO5NQWuOyZcvy/TeXlpZW4tZyJnM52zXu3LnzlLc7y5YtC4k1/tp1+Ev5BUKor+/vf/+71a5d26Kjo+2yyy6zuXPnBp1HqN+uFja+7hkAADhC8jUIAACgaBEIAADAQSAAAAAHgQAAABwEAgAAcBAIAADAQSAAAAAHgQAAABwEAhCiBg0apBtuuKG4pwGglCIQAACAg0AASoFrrrlGw4cP1/3336+LLrpIVapU0fjx44PGHDx4UEOGDFFCQoKio6PVsGFDvfPOO97+N998U6mpqYqKilKNGjU0ZcqUoJ+vUaOGHn30UQ0cOFCxsbFKSUnRv/71L33zzTfq2bOnYmNj1bhxY61duzbo55YvX66rrrpKMTExSkpK0vDhw/XDDz8U2WUBoHAQCEAp8dJLL6ls2bJavXq1HnvsMU2YMEEZGRmSfvo62a5du2rFihV69dVXtWXLFk2ePFnh4eGSpHXr1qlv37666aabtGnTJo0fP14PPfSQZs6cGXSMp556Sq1bt9aGDRvUvXt3DRgwQAMHDlT//v21fv161apVSwMHDlTeV7xs375dXbp0Ua9evbRx40b94x//0PLlyzVs2LDzetkAKIBi/rIoAAWUlpZmPXv2NLOfvu2zTZs2QfubN29uo0ePNjOzRYsWWVhY2Cm/Ea9fv37WsWPHoG2jRo2yBg0aeKdTUlKsf//+3umvv/7aJNlDDz3kbVu5cqVJ8r4B7/bbb7fBgwcHne9HH31kYWFhv/r1ywCKF48gAKVE48aNg05XrVpVBw4ckCRlZmaqevXqqlu3br4/++mnn6p169ZB21q3bq2srCzl5ubme4yEhARJUqNGjZxtecf95JNPNHPmTMXGxnp/OnfurEAgoJ07dxZ0qQDOg4jingCAwhEZGRl02ufzKRAISJJiYmIK/Rg+n++U2/KOe/jwYQ0ZMkTDhw93zis5OblQ5gSgaBAIwAWgcePG+vLLL7Vt27Z8H0W49NJLtWLFiqBtK1asUN26db3XKRTE5Zdfri1btqh27doFPg8AxYOnGIALQNu2bXX11VerV69eysjI0M6dO7VgwQItXLhQknTvvfdq6dKleuSRR7Rt2za99NJLmjZtmu67775zOu7o0aP18ccfa9iwYcrMzFRWVpbmzZvHixSBEEAgABeIN998U82bN9fNN9+sBg0a6P777/deX3D55ZfrjTfe0OzZs9WwYUM9/PDDmjBhggYNGnROx2zcuLE++OADbdu2TVdddZWaNm2qhx9+WImJiYWwIgBFyWf2f+9HAgAA+D88ggAAABwEAgAAcBAIAADAQSAAAAAHgQAAABwEAgAAcBAIAADAQSAAAAAHgQAAABwEAgAAcBAIAADAQSAAAADH/wNEHx9oR77wTwAAAABJRU5ErkJggg==\n"},"metadata":{}}]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.1"},"colab":{"provenance":[],"collapsed_sections":["y-43zbQ1H6g-","RB0v_FmfMYL6"],"toc_visible":true}},"nbformat":4,"nbformat_minor":0}